[{"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\index.js":"1","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\history.js":"2","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\setAuthorizationToken.js":"3","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\types.js":"4","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\requireAuth.js":"5","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\checkIfAuth.js":"6","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\layouts\\Admin.js":"7","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\layouts\\Auth.js":"8","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\index.js":"9","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\stats.js":"10","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\appointments.js":"11","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\videos.js":"12","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\comments.js":"13","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\auth.js":"14","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\routes.js":"15","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Footers\\AdminFooter.js":"16","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Footers\\AuthFooter.js":"17","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Navbars\\AuthNavbar.js":"18","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Sidebar\\Sidebar.js":"19","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Navbars\\AdminNavbar.js":"20","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\userActions.js":"21","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Maps.js":"22","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Register.js":"23","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Login.js":"24","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Icons.js":"25","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Profile.js":"26","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\Index.js":"27","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\api\\server.js":"28","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromComments.js":"29","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\appointmentActions.js":"30","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\ContentCard.js":"31","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Groups\\Comment.js":"32","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\commentActions.js":"33","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromVideos.js":"34","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromAppointments.js":"35","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\videoActions.js":"36","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\BarGraph.js":"37","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\TableCard.js":"38","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Headers\\UserHeader.js":"39","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Headers\\Header.js":"40","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\serverRoutes.js":"41","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\countdown.js":"42","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\charts.js":"43","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Groups\\AvatarGroup.js":"44","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\statActions.js":"45","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\StatCard.js":"46","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Appointments.js":"47","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\sidebar.js":"48"},{"size":1693,"mtime":1608843217178,"results":"49","hashOfConfig":"50"},{"size":87,"mtime":1605244826809,"results":"51","hashOfConfig":"50"},{"size":260,"mtime":1610128673171,"results":"52","hashOfConfig":"50"},{"size":732,"mtime":1610130019937,"results":"53","hashOfConfig":"50"},{"size":923,"mtime":1610128531012,"results":"54","hashOfConfig":"50"},{"size":960,"mtime":1610128545850,"results":"55","hashOfConfig":"50"},{"size":1936,"mtime":1610420890127,"results":"56","hashOfConfig":"50"},{"size":2255,"mtime":1608171438073,"results":"57","hashOfConfig":"50"},{"size":394,"mtime":1610130288055,"results":"58","hashOfConfig":"50"},{"size":567,"mtime":1609098760205,"results":"59","hashOfConfig":"50"},{"size":640,"mtime":1610123847649,"results":"60","hashOfConfig":"50"},{"size":941,"mtime":1610130205167,"results":"61","hashOfConfig":"50"},{"size":600,"mtime":1610129546330,"results":"62","hashOfConfig":"50"},{"size":1410,"mtime":1610123572947,"results":"63","hashOfConfig":"50"},{"size":1320,"mtime":1610568044833,"results":"64","hashOfConfig":"50"},{"size":2237,"mtime":1608163556960,"results":"65","hashOfConfig":"50"},{"size":645,"mtime":1608171331279,"results":"66","hashOfConfig":"50"},{"size":2199,"mtime":1608832635063,"results":"67","hashOfConfig":"50"},{"size":7986,"mtime":1610568578577,"results":"68","hashOfConfig":"50"},{"size":3813,"mtime":1609214706097,"results":"69","hashOfConfig":"50"},{"size":1355,"mtime":1610476645374,"results":"70","hashOfConfig":"50"},{"size":2840,"mtime":1608163559438,"results":"71","hashOfConfig":"50"},{"size":4921,"mtime":1608170048265,"results":"72","hashOfConfig":"50"},{"size":3536,"mtime":1608920881391,"results":"73","hashOfConfig":"50"},{"size":121151,"mtime":1608163559101,"results":"74","hashOfConfig":"50"},{"size":12413,"mtime":1608170048257,"results":"75","hashOfConfig":"50"},{"size":5006,"mtime":1610565951246,"results":"76","hashOfConfig":"50"},{"size":135,"mtime":1608839300288,"results":"77","hashOfConfig":"50"},{"size":3060,"mtime":1610128982799,"results":"78","hashOfConfig":"50"},{"size":732,"mtime":1610420607370,"results":"79","hashOfConfig":"50"},{"size":1170,"mtime":1610484871084,"results":"80","hashOfConfig":"50"},{"size":1606,"mtime":1610488426259,"results":"81","hashOfConfig":"50"},{"size":942,"mtime":1610484035919,"results":"82","hashOfConfig":"50"},{"size":2165,"mtime":1610565429250,"results":"83","hashOfConfig":"50"},{"size":3542,"mtime":1610557680117,"results":"84","hashOfConfig":"50"},{"size":1026,"mtime":1610130057588,"results":"85","hashOfConfig":"50"},{"size":1789,"mtime":1610483023315,"results":"86","hashOfConfig":"50"},{"size":8039,"mtime":1610566023054,"results":"87","hashOfConfig":"50"},{"size":1434,"mtime":1608169881162,"results":"88","hashOfConfig":"50"},{"size":1498,"mtime":1610429499307,"results":"89","hashOfConfig":"50"},{"size":332,"mtime":1610557680116,"results":"90","hashOfConfig":"50"},{"size":1843,"mtime":1610487602529,"results":"91","hashOfConfig":"50"},{"size":10964,"mtime":1610483082510,"results":"92","hashOfConfig":"50"},{"size":2266,"mtime":1610420451785,"results":"93","hashOfConfig":"50"},{"size":682,"mtime":1610428415711,"results":"94","hashOfConfig":"50"},{"size":3696,"mtime":1610476269130,"results":"95","hashOfConfig":"50"},{"size":70634,"mtime":1610568044778,"results":"96","hashOfConfig":"50"},{"size":970,"mtime":1610569416217,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1a7qse3",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\index.js",[],["212","213"],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\history.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\setAuthorizationToken.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\types.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\requireAuth.js",["214"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport history from \"../history\";\n\n\nexport default function (ComposedComponent) {\n    class Authenticate extends React.Component {\n        UNSAFE_componentWillMount() {\n            if (!this.props.logged_in) {\n                history.push('/auth/login');\n            }\n        }\n\n        UNSAFE_componentWillUpdate = nextProps => {\n            if (!nextProps.logged_in) {\n                history.push('/auth/login');\n            }\n        };\n\n        render() {\n            return (\n                <ComposedComponent {...this.props} />\n            );\n        }\n    }\n\n    Authenticate.propTypes = {\n        logged_in: PropTypes.bool.isRequired,\n    }\n\n    function mapStateToProps(state) {\n        return {\n            logged_in: state.auth.logged_in\n        };\n    }\n\n    return connect(mapStateToProps)(Authenticate);\n}\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\checkIfAuth.js",["215"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport history from \"../history\";\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        UNSAFE_componentWillMount() {\r\n            if (this.props.logged_in) {\r\n                history.push('/admin/index');\r\n            }\r\n        }\r\n\r\n        UNSAFE_componentWillUpdate = nextProps => {\r\n            if (nextProps.logged_in) {\r\n                history.push('/admin/index');\r\n            }\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <ComposedComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        logged_in: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            logged_in: state.auth.logged_in\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate);\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\layouts\\Admin.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\layouts\\Auth.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\index.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\stats.js",["216"],"import {GET_STATS, GET_STATS_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    stats: [],\r\n    stat_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_STATS:\r\n            return {\r\n                ...state,\r\n                stats: action.stats,\r\n                stat_error: ''\r\n            };\r\n        case GET_STATS_FAIL:\r\n            return {\r\n                ...state,\r\n                stat_error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\appointments.js",["217"],"import {GET_APPOINTMENTS, GET_APPOINTMENTS_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    appointments: [],\r\n    appointments_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                appointments: action.appointments,\r\n                appointments_error: ''\r\n            };\r\n        case GET_APPOINTMENTS_FAIL:\r\n            return {\r\n                ...state,\r\n                appointments_error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\videos.js",["218"],"import {GET_VIDEO, GET_VIDEOS, GET_VIDEO_FAIL, GET_VIDEOS_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    videos: [],\r\n    videos_error:'',\r\n    video: {},\r\n    video_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_VIDEOS:\r\n            return {\r\n                ...state,\r\n                videos: action.videos,\r\n                videos_error: ''\r\n            };\r\n        case GET_VIDEOS_FAIL:\r\n            return {\r\n                ...state,\r\n                videos_error: action.error\r\n            };\r\n        case GET_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: action.video,\r\n                video_error: ''\r\n            };\r\n        case GET_VIDEO_FAIL:\r\n            return {\r\n                ...state,\r\n                video_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\comments.js",["219"],"import {GET_COMMENTS, GET_COMMENTS_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    comments_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: action.comments,\r\n                comments_error: ''\r\n            };\r\n        case GET_COMMENTS_FAIL:\r\n            return {\r\n                ...state,\r\n                comments_error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\reducers\\auth.js",["220"],"import {SIGN_IN, SIGN_IN_ERROR, SIGN_UP, SIGN_UP_ERROR, SIGN_OUT, UPDATE_TOKEN} from '../actions/types';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nconst initialState = {\r\n    logged_in: false,\r\n    sign_in_error:'',\r\n    sign_up_error:'',\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                logged_in: !isEmpty(action.user),\r\n                user: action.user,\r\n                sign_in_error: ''\r\n            };\r\n        case SIGN_IN_ERROR:\r\n            return {\r\n                ...state,\r\n                sign_in_error: action.error\r\n            };\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                logged_in: !isEmpty(action.user),\r\n                user: action.user,\r\n                sign_up_error: ''\r\n            };\r\n        case SIGN_UP_ERROR:\r\n            return {\r\n                ...state,\r\n                sign_up_error: action.error\r\n            };\r\n        case SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                logged_in: false,\r\n                sign_in_error: '',\r\n                user: {}\r\n            }\r\n        case UPDATE_TOKEN:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\routes.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Footers\\AdminFooter.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Footers\\AuthFooter.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Navbars\\AuthNavbar.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Navbars\\AdminNavbar.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\userActions.js",["221","222"],"import setAuthorizationToken from '../utils/setAuthorizationToken';\r\nimport jwtDecode from 'jwt-decode';\r\nimport {SIGN_IN, SIGN_IN_ERROR, SIGN_UP, SIGN_UP_ERROR, SIGN_OUT, UPDATE_TOKEN} from './types';\r\nimport {login_route, new_token_route} from \"../utils/serverRoutes\";\r\nimport history from \"../history\";\r\nimport server from \"../api/server\";\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthorizationToken(false);\r\n    dispatch({type: SIGN_OUT});\r\n    history.push('/auth/login');\r\n}\r\n\r\nexport const login = (formValues) => async dispatch => {\r\n    try{\r\n        const {data} = await server.post(login_route, {email: formValues.email, password : formValues.password});\r\n        localStorage.setItem('jwtToken', data.token);\r\n        setAuthorizationToken(data.token);\r\n        dispatch({type: SIGN_IN, user: jwtDecode(data.token)});\r\n        history.push('/admin/index');\r\n    }catch(e){\r\n        dispatch({type: SIGN_IN_ERROR, error: e.response.data});\r\n    }\r\n}\r\n\r\n\r\nexport const updateToken = () => async dispatch => {\r\n    try{\r\n        const {data} = await server.post(new_token_route);\r\n        localStorage.setItem('jwtToken', data);\r\n        setAuthorizationToken(data);\r\n        dispatch({type: UPDATE_TOKEN, user: jwtDecode(data)});\r\n    }catch(e){\r\n        //Token update error\r\n    }\r\n}\r\n\r\n\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Maps.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Register.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Login.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Icons.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Profile.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\Index.js",["223","224","225","226","227","228","229","230"],"\r\nimport React from \"react\";\r\nimport {getAppointments} from \"../actions/appointmentActions\";\r\nimport {getAllComments} from \"../actions/commentActions\";\r\nimport {getVideos} from \"../actions/videoActions\"\r\nimport tableContentFromComments from \"../utils/tableContentFromComments\";\r\nimport tableContentFromAppointments from \"../utils/tableContentFromAppointments\";\r\nimport tableContentFromVideos from \"../utils/tableContentFromVideos\";\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col, CardBody\r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport TableCard from \"../components/Cards/TableCard\";\r\nimport BarGraph from \"../components/Cards/BarGraph\";\r\nimport ContentCard from \"../components/Cards/ContentCard\";\r\nimport Comment from \"../components/Groups/Comment\";\r\n\r\nclass Index extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointments : this.props.appointments,\r\n      videos: this.props.videos,\r\n      videoTableContent: [{\r\n        title: \"Loading...\",\r\n        italic : true,\r\n        donTrim : false,\r\n        contents: []\r\n      }]\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n    if(prevState.appointments.length === 0 && this.props.appointments.length>0)\r\n      this.setState({appointments: this.props.appointments})\r\n    if(prevState.videos.length === 0 && this.props.videos.length>0){\r\n      this.getVideoDetails();\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.getAppointments();\r\n    this.props.getAllComments();\r\n    this.props.getVideos();\r\n    this.getVideoDetails();\r\n  }\r\n\r\n  getVideoDetails = async() =>{\r\n    const content = await tableContentFromVideos(this.state.videos, [\"title\", \"views\", \"likes\", \"dislikes\"]);\r\n    this.setState({videos: this.props.videos, videoTableContent : content})\r\n  }\r\n\r\n\r\n  filterAppointments(appointments){\r\n\r\n    var waitingAppointments = [];\r\n    appointments.map(appointment => {\r\n\r\n      if(appointment.status === 0){\r\n        waitingAppointments.push(appointment);\r\n      }\r\n    })\r\n\r\n    return waitingAppointments;\r\n  }\r\n\r\n  showMoreAppointments = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  getComments = () => {\r\n    return this.props.comments.slice(0, 3).map(comment => {\r\n      return <Comment key={comment.id} comment={comment}/>\r\n    })\r\n  }\r\n\r\n  videoClick = (e, id) => {\r\n    e.preventDefault();\r\n    const url = this.props.videos[this.props.videos.findIndex(x => x.id === id)].video_url;\r\n    const win = window.open(url, '_blank');\r\n    win.focus();\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <Header />\r\n          <Container className=\"mt--7\" fluid>\r\n            <Row>\r\n              <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n\r\n                <TableCard\r\n                    title=\"Pending Appointments\"\r\n                    top_button=\"Show All\"\r\n                    top_callback={this.showMoreAppointments}\r\n                    cols={[\"With\", \"Status\", \"Date\", \"Time\", \"Actions\"]}\r\n                    rows={tableContentFromAppointments(this.filterAppointments(this.props.appointments), [\"status\", \"date\", \"time\"],[{title:\"Accept\"}, {title:\"Deny\"}])}\r\n                    with_images={false}\r\n                    rowClick={this.openModal}\r\n                    dark={localStorage.getItem(\"dark\") === 'true'}\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\">\r\n                <BarGraph\r\n                  title=\"Appointments\"\r\n                  subtitle=\"Overview\"\r\n                  size=\"250px\"\r\n                  appointments={this.state.appointments}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n              <Col className=\"mb-5 mb-xl-0\" xl=\"4\">\r\n                <ContentCard\r\n                    title=\"Comments\"\r\n                    top_button=\"See all\"\r\n                    top_callback={this.showMoreAppointments}\r\n                >\r\n                  {this.getComments()}\r\n                </ContentCard>\r\n              </Col>\r\n              <Col xl=\"8\">\r\n              <TableCard\r\n                    title=\"Video Activity\"\r\n                    top_button=\"Show All\"\r\n                    top_callback={this.showMoreAppointments}\r\n                    cols={[\"\", \"Title\", \"Views\", \"Likes\", \"Dislikes\"]}\r\n                    rows={this.state.videoTableContent}\r\n                    rowClick={this.videoClick}\r\n                    dark={localStorage.getItem(\"dark\") === 'true'}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appointments: state.appointments.appointments,\r\n    comments: state.comments.comments,\r\n    videos : state.videos.videos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAppointments, getAllComments, getVideos})(Index);\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\api\\server.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromComments.js",["231","232","233","234","235"],"export default (comments, filters, buttons) => {\r\n    const table_data = [];\r\n\r\n    if(!comments)\r\n        return [];\r\n\r\n    comments.map(comment => {\r\n        const object = {\r\n            title: comment.title,\r\n            id: comment._id,\r\n            image: comment.image,\r\n            contents: []\r\n        }\r\n        filters.map(filter => {\r\n            let content = {};\r\n            switch (filter){\r\n                case \"users\":\r\n                    content = {\r\n                        type:\"avatar-group\",\r\n                        task_id:comment._id\r\n                    };\r\n                    break;\r\n                case \"state\":\r\n                    content = {\r\n                        type:\"badge\",\r\n                        value: getState(comment.state).state,\r\n                        class: getState(comment.state).class\r\n                    };\r\n                    break;\r\n                case \"progress\":\r\n                    content = {\r\n                        type:\"progress\",\r\n                        value: comment.completion,\r\n                        class: getBarClass(comment.completion)\r\n                    };\r\n                    break;\r\n                case \"deadline\":\r\n                    content = {\r\n                        value: getDate(comment.until)\r\n                    }\r\n            }\r\n            object.contents.push(content);\r\n        });\r\n        if(buttons) {\r\n            const buttonContent = {type:\"buttons\",actions: []};\r\n            buttons.map(button => {\r\n                buttonContent.actions.push({title: button.title, callback: button.callback});\r\n            })\r\n            object.contents.push(buttonContent);\r\n        }\r\n        table_data.push(object);\r\n    })\r\n\r\n    return table_data;\r\n}\r\n\r\nconst getState = (state) => {\r\n    const result = {\r\n        state: '',\r\n        class: ''\r\n    }\r\n    switch (state){\r\n        case 1:\r\n            result.state = 'Not Started';\r\n            result.class = 'bg-info';\r\n            break;\r\n        case 2:\r\n            result.state = 'On it';\r\n            result.class = 'bg-warning';\r\n            break;\r\n        case 3:\r\n            result.state = 'Finished';\r\n            result.class = 'bg-success';\r\n            break;\r\n        case 4:\r\n            result.state = 'Stuck';\r\n            result.class = 'bg-danger';\r\n            break;\r\n        default:\r\n            result.state = 'Paused';\r\n            result.class = 'bg-blue';\r\n            break;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst getBarClass = (value) => {\r\n    if(value<50)\r\n        return \"bg-gradient-danger\"\r\n    if(value<70)\r\n        return \"bg-gradient-warning\"\r\n    if(value<90)\r\n        return \"bg-gradient-info\"\r\n    return \"bg-gradient-success\"\r\n}\r\n\r\nconst getDate = (date) => {\r\n    const d = new Date(date);\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n    return `${mo} ${da}, ${ye}`;\r\n}","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\appointmentActions.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\ContentCard.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Groups\\Comment.js",["236","237"],"import React from 'react';\r\nimport {Button, Col, Row} from \"reactstrap\";\r\nimport countdown from \"../../utils/countdown\";\r\n\r\nclass Comment extends React.Component{\r\n\r\n    getDate (date){\r\n        let value = countdown(date, true);\r\n        if(value.substring(value.length - 6, value.length) === \"{none}\") {\r\n            return value.substring(0, value.length - 6);\r\n        }\r\n        return countdown(date, true) + \" ago\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const {user_avatar, comment_text, user_name, date} = this.props.comment;\r\n\r\n        return (\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"comment\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\" style={{width: \"36px\"}}>\r\n                        <span className=\"avatar avatar-sm rounded-circle\">\r\n                            <img src={process.env.PUBLIC_URL + `/profile-pics/${user_avatar}`}/>\r\n                        </span>\r\n\r\n                            <h3 className=\"mb-0 name\">{user_name}</h3>\r\n                            <h5 className=\"mb-0 video\">In Video 5</h5>\r\n\r\n                    </div>\r\n                            <div className=\"text-right date\">\r\n                                {this.getDate(date)}\r\n                            </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col comment-content\">\r\n                        {comment_text}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\commentActions.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromVideos.js",["238","239","240"],"import axios from \"axios\";\r\nimport config from '../config.json'\r\nimport _ from 'lodash';\r\n\r\n\r\nexport default async (videos, filters) => {\r\n    const table_data = [];\r\n\r\n    if(!videos || videos.length === 0 )\r\n        return [{\r\n            title: \"No videos yet\",\r\n            italic : true,\r\n            donTrim : false,\r\n            contents: []\r\n        }];\r\n\r\n    await Promise.all(videos.map(async video => {\r\n       var videoData = await getDetails(video.video_url);\r\n       var videoStats = videoData.items[0].statistics;\r\n\r\n\r\n        const object = {\r\n            title: video.video_title,\r\n            url: video.video_url,\r\n            id: video.id,\r\n            contents: []\r\n        }\r\n        filters.map(filter => {\r\n            let content = {};\r\n            switch (filter){\r\n            \r\n                case \"title\" :\r\n                    content = {\r\n                        value: video.video_title\r\n                    }\r\n                    break; \r\n                case \"views\" : \r\n                content = {\r\n                    value: videoStats.viewCount\r\n                }\r\n                    break;\r\n                case \"likes\" :\r\n                    content = {\r\n                        value: videoStats.likeCount\r\n                    }\r\n                    break;\r\n                case \"dislikes\" : \r\n                content = {\r\n                    value: videoStats.dislikeCount\r\n                }\r\n                    break;\r\n                \r\n            }\r\n            object.contents.push(content);\r\n        });\r\n        \r\n        table_data.push(object);\r\n    }))\r\n    return table_data;\r\n}\r\n\r\nconst getDetails = _.memoize(async(video_url) =>{\r\n\r\n    var video_id = video_url.split('v=')[1];\r\n    var ampersandPosition = video_id.indexOf('&');\r\n    if(ampersandPosition !== -1) {\r\n      video_id = video_id.substring(0, ampersandPosition);\r\n    }\r\n\r\n\r\n    const {data} = await axios.get(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${video_id}&key=${config.google_api}`, {\r\n        headers: {\r\n            'Authorization': ``\r\n        }\r\n    });\r\n\r\n return data;\r\n});\r\n\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\tableContentFromAppointments.js",["241","242","243","244","245"],"export default (appointments, filters, buttons) => {\r\n    const table_data = [];\r\n\r\n    if(!appointments || appointments.length === 0 )\r\n        return [{\r\n            title: \"No pending appointments\",\r\n            italic : true,\r\n            donTrim : false,\r\n            contents: []\r\n        }];\r\n\r\n    appointments.map(appointment => {\r\n        const object = {\r\n            title: appointment.client_name,\r\n            id: appointment.id,\r\n            contents: []\r\n        }\r\n        filters.map(filter => {\r\n            let content = {};\r\n            switch (filter){\r\n                case \"users\":\r\n                    content = {\r\n                        type:\"avatar-group\",\r\n                        task_id:appointment._id\r\n                    };\r\n                    break;\r\n                case \"status\":\r\n                    content = {\r\n                        type:\"badge\",\r\n                        value: getStatus(appointment.status).status,\r\n                        class: getStatus(appointment.status).class\r\n                    };\r\n                    break;\r\n                case \"progress\":\r\n                    content = {\r\n                        type:\"progress\",\r\n                        value: appointment.completion,\r\n                        class: getBarClass(appointment.completion)\r\n                    };\r\n                    break;\r\n                case \"date\":\r\n                    content = {\r\n                        value: getDate(appointment.date)\r\n                    }\r\n                    break;\r\n                case \"time\":\r\n                    content = {\r\n                        value: getTime(appointment.date)\r\n                    }\r\n            }\r\n            object.contents.push(content);\r\n        });\r\n        if(buttons) {\r\n            const buttonContent = {type:\"buttons\",actions: []};\r\n            buttons.map(button => {\r\n                buttonContent.actions.push({title: button.title, callback: button.callback});\r\n            })\r\n            object.contents.push(buttonContent);\r\n        }\r\n        table_data.push(object);\r\n    })\r\n\r\n    return table_data;\r\n}\r\n\r\nconst getStatus = (status) => {\r\n    const result = {\r\n        status: '',\r\n        class: ''\r\n    }\r\n    switch (status){\r\n        case 0:\r\n            result.status = 'Waiting';\r\n            result.class = 'bg-info';\r\n            break;\r\n        case 1:\r\n            result.status = 'Accepted';\r\n            result.class = 'bg-success';\r\n            break;\r\n        case 2:\r\n            result.status = 'Cancelled';\r\n            result.class = 'bg-danger';\r\n            break;\r\n        case 3:\r\n            result.status = 'Done';\r\n            result.class = 'bg-success';\r\n            break;\r\n        default:\r\n            result.status = 'Unknown';\r\n            result.class = 'bg-blue';\r\n            break;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst getBarClass = (value) => {\r\n    if(value<50)\r\n        return \"bg-gradient-danger\"\r\n    if(value<70)\r\n        return \"bg-gradient-warning\"\r\n    if(value<90)\r\n        return \"bg-gradient-info\"\r\n    return \"bg-gradient-success\"\r\n}\r\n\r\nconst getDate = (date) => {\r\n    const d = new Date(date);\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n    return `${mo} ${da}, ${ye}`;\r\n}\r\n\r\nconst getTime = (date) => new Intl.DateTimeFormat('en', { timeStyle: 'short' }).format(new Date(date));\r\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\videoActions.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\BarGraph.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\TableCard.js",["246"],"import React from 'react';\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    CardHeader, DropdownItem, DropdownMenu, DropdownToggle,\r\n    Media,\r\n    Progress,\r\n    Row,\r\n    Table,\r\n    UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport JsxParser from \"react-jsx-parser\";\r\nimport AvatarGroup from \"../Groups/AvatarGroup\";\r\n\r\nclass TableCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            dark: this.props.dark\r\n        }\r\n    }\r\n\r\n\r\n    getCols() {\r\n        return this.props.cols.map(col => {\r\n            return (\r\n                <th key={col} scope=\"col\">{col}</th>\r\n            )\r\n        })\r\n    }\r\n\r\n    getRows() {\r\n        return this.props.rows.map((row, key) => {\r\n            return (\r\n                <tr key={key} >\r\n                    <th scope=\"row\" onClick={(e) => this.props.rowClick(e, row.id)} style={{maxWidth: (row.image) ?'200px': '180px', cursor: 'pointer', overflow: 'hidden', textOverflow: (row.donTrim) ? 'ellipsis' : 'none'}}>\r\n                        {(row.image && this.props.with_images) ?\r\n                            <Media className=\"align-items-center\" style={{display:'contents'}}>\r\n                                <a className=\"avatar avatar-xsm rounded-circle mr-3\" style={{display:'inline-table'}} onClick={e => e.preventDefault()}>\r\n                                    <img alt={row.title} src={process.env.PUBLIC_URL + `/task_images/${row.image}`} />\r\n                                </a>\r\n                                <Media style={{display:'inline'}}>\r\n                                    <span className=\"mb-0 text-sm\">\r\n                                      {row.title}\r\n                                    </span>\r\n                                </Media>\r\n                            </Media>\r\n                        :<span style={{fontStyle: (row.italic) ? 'italic' : 'normal' }}>{row.title}</span>}\r\n                    </th>\r\n                    {this.getRowContent(row.contents)}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    getRowContent(row){\r\n        return row.map((col, key) => {\r\n            switch (col.type){\r\n                case \"custom_element\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <JsxParser renderInWrapper={false} jsx={col.customElement} />\r\n                            {\" \"}\r\n                            {this.value(col)}\r\n                        </td>\r\n                    );\r\n                case \"arrow\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <i className={`fas ${col.arrow.up ? 'fa-arrow-up text-success' : 'fa-arrow-down text-danger' } mr-1`} />\r\n                            {\" \"}\r\n                        </td>\r\n                    );\r\n                case \"badge\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <Badge color=\"\" className=\"badge-dot mr-4\" style={{ fontStyle : \"italic\"}} >\r\n                                <i className={col.class} />\r\n                                {this.value(col)}\r\n                            </Badge>\r\n                        </td>\r\n                    );\r\n                case \"avatar-group\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <AvatarGroup task_id={col.task_id + \"\"} />\r\n                        </td>\r\n                    );\r\n                case \"progress\":\r\n                    return (\r\n                        <td  key={key}>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <span className=\"mr-2\">{this.value(col)}</span>\r\n                                <div>\r\n                                    <Progress\r\n                                        max=\"100\"\r\n                                        value={col.value}\r\n                                        barClassName={col.class}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    );\r\n                case \"buttons\":\r\n                    return (\r\n                        <td className=\"text-right\"  key={key}>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle\r\n                                    className=\"btn-icon-only text-light\"\r\n                                    href=\"#pablo\"\r\n                                    role=\"button\"\r\n                                    size=\"sm\"\r\n                                    color=\"\"\r\n                                    onClick={e => e.preventDefault()}\r\n                                >\r\n                                    <i className=\"fas fa-ellipsis-v\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                    {this.getActions(col.actions)}\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </td>\r\n                    )\r\n                default:\r\n                    return (\r\n                        <td key={key}>\r\n                            {this.value(col)}\r\n                        </td>\r\n                    );\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    getActions(actions) {\r\n        return actions.map ((action, key) => {\r\n            return (\r\n                <DropdownItem\r\n                    href=\"#pablo\"\r\n                    key={key}\r\n                    onClick={e => e.preventDefault()}\r\n                >\r\n                    {action.title}\r\n                </DropdownItem>\r\n            )\r\n        })\r\n    }\r\n\r\n    value(col) {\r\n        return (\r\n            <>\r\n                {col.money && \"$\"}\r\n                {!col.custom_contains_value && col.value}\r\n                {col.percentage && \"%\"}\r\n            </>\r\n        )\r\n    }\r\n\r\n    toggleTheme= (e) =>{\r\n        e.preventDefault();\r\n        localStorage.setItem(\"dark\", (!this.state.dark).toString());\r\n        this.setState({dark: !this.state.dark})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={`${this.state.dark && 'bg-default'} shadow`}>\r\n                <CardHeader className={`${this.state.dark && 'bg-transparent'} border-0`}>\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                            <h3 className={`${this.state.dark && 'text-white'} mb-0`}>{this.props.title}</h3>\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={this.toggleTheme}\r\n                                size=\"sm\"\r\n                            >\r\n                                <i className={`fa ${this.state.dark ? 'fa-sun' : 'fa-moon'}`}/>\r\n                            </Button>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={this.props.top_callback}\r\n                                size=\"sm\"\r\n                            >\r\n                                {this.props.top_button}\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <Table className={`${this.state.dark && 'table-dark'} align-items-center table-flush`} responsive>\r\n                    <thead className={`${this.state.dark ? 'thead-dark' : 'thead-light'}`}>\r\n                        <tr>\r\n                            {this.getCols()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.getRows()}\r\n                    </tbody>\r\n                </Table>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableCard;","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Headers\\UserHeader.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Headers\\Header.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\serverRoutes.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\countdown.js",["247"],"export default (endDate, inversed = false) => {\r\n    let diff;\r\n    if(!inversed)\r\n        diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n    else\r\n        diff = (Date.parse(new Date()) - Date.parse(new Date(endDate)) ) / 1000;\r\n\r\n    //   countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n        years: 0,\r\n        months: 0,\r\n        weeks:0,\r\n        days: 0,\r\n        hours: 0,\r\n        min: 0,\r\n        sec: 0,\r\n        millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n        timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n        if(timeLeft.years === 1 && inversed)\r\n            return \" last year {none}\"\r\n        const word = (timeLeft.years === 1) ? \" year\" : \" years\";\r\n        return timeLeft.years + word;\r\n    }\r\n    if(diff >= 2419200) {\r\n        timeLeft.months = Math.floor(diff / 2419200);\r\n        if(timeLeft.months === 1 && inversed)\r\n            return \" last month {none}\"\r\n        const word = (timeLeft.months === 1) ? \" month\" : \" months\";\r\n        return timeLeft.months + word;\r\n    }\r\n    if (diff >= 604800) {\r\n        timeLeft.weeks = Math.floor(diff / 604800);\r\n        if(timeLeft.weeks === 1 && inversed)\r\n            return \" last week{none}\"\r\n        const word = (timeLeft.weeks === 1) ? \" week\" : \" weeks\";\r\n        return timeLeft.weeks + word;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n        timeLeft.days = Math.floor(diff / 86400);\r\n        if(timeLeft.days === 1 && inversed)\r\n            return \" yesterday {none}\"\r\n        const word = (timeLeft.days === 1) ? \" day\" : \" days\";\r\n        return timeLeft.days + word;\r\n    }\r\n    if(inversed)\r\n        return \" earlier today{none}\"\r\n    return \"0 days\";\r\n\r\n\r\n}","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\utils\\charts.js",["248"],"\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\nthis.appointments = [];\n\nlet setAppointments = (appointments) => {\n  this.appointments = appointments;\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\nconst getLabels = (j = 5) => {\n  const d = new Date();\n  d.setDate(1);\n  d.setMonth(d.getMonth()-j+2);\n  let months = [];\n  for (let i=j; i>0; i--){\n    months.push(new Intl.DateTimeFormat('en', { month: 'short' }).format(d));\n    d.setMonth(d.getMonth()+1);\n  }\n\n  return months;\n}\n\nconst getData = (appointments, j=5) => {\n  const today = new Date();\n  today.setDate(1);\n  today.setMonth(today.getMonth()-j+2);\n  let data = [];\n  for (let i=j; i>0; i--){\n    let value = 0;\n    appointments.map(appointment => {\n      const date = new Date(appointment.date);\n      if(date.getMonth() === today.getMonth())\n        value++;\n    });\n    today.setMonth(today.getMonth()+1);\n    data.push(value);\n  }\n  return data\n}\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet appointmentChart = () => {\n  return {\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                if (!(value % 10)) {\n                  //return '$' + value + 'k'\n                  return value;\n                }\n              }\n            }\n          }\n        ]\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n            content += yLabel;\n            return content;\n          }\n        }\n      }\n    },\n    data: {\n      labels: getLabels(),\n      datasets: [\n        {\n          label: \"Appointments\",\n          data: getData(this.appointments),\n          maxBarThickness: 10\n        }\n      ]\n    }\n  };\n}\n\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  setAppointments,\n  chartExample1, // used inside src/views/Index.js\n  appointmentChart, // used inside src/views/Index.js\n};\n","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Groups\\AvatarGroup.js",["249"],"import React from 'react';\r\nimport {UncontrolledTooltip} from \"reactstrap\";\r\nimport server from \"../../api/server\";\r\n//import {tasks_route} from \"../../utils/serverRoutes\";\r\nimport axios from \"axios\";\r\n\r\nclass AvatarGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTaskUsers(this.props.task_id);\r\n    }\r\n\r\n    getTaskUsers = async (task) => {\r\n        try{\r\n            const {data} = await server.get(/*tasks_route + */\"/users/\" + task, {\r\n                headers: {\r\n                    'x-auth-token': axios.defaults.headers.common['x-auth-token']\r\n                }\r\n            });\r\n            this.setState({users: data});\r\n        }catch(e){\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getUsers(users, number = users.length){\r\n        if(number > 5)\r\n            number = 5;\r\n        return users.map((user, key) => {\r\n            if(number > 0) {\r\n                number--;\r\n                return (\r\n                    <React.Fragment key={key}>\r\n                        <a\r\n                            className=\"avatar avatar-sm\"\r\n                            id={\"user_\" +user._id}\r\n                            onClick={e => e.preventDefault()}\r\n                        >\r\n                            <img\r\n                                alt=\"...\"\r\n                                className=\"rounded-circle\"\r\n                                src={process.env.PUBLIC_URL + `/profile-pics/${user.profile_img}`}\r\n                            />\r\n                        </a>\r\n                        <UncontrolledTooltip\r\n                            delay={0}\r\n                            target={\"user_\" +user._id}\r\n                        >\r\n                            {user.name}\r\n                        </UncontrolledTooltip>\r\n                    </React.Fragment>\r\n                );\r\n            }else{\r\n                return null;\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"avatar-group\">\r\n                {this.getUsers(this.state.users)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvatarGroup;","D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\actions\\statActions.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\components\\Cards\\StatCard.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\views\\examples\\Appointments.js",[],"D:\\Anis\\Documents\\Work\\Projects\\Website\\Insurance\\client\\src\\sidebar.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":7,"column":1,"nodeType":"256","endLine":39,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":6,"column":1,"nodeType":"256","endLine":38,"endColumn":2},{"ruleId":"254","severity":1,"message":"257","line":8,"column":1,"nodeType":"256","endLine":25,"endColumn":2},{"ruleId":"254","severity":1,"message":"257","line":8,"column":1,"nodeType":"256","endLine":25,"endColumn":2},{"ruleId":"254","severity":1,"message":"257","line":10,"column":1,"nodeType":"256","endLine":37,"endColumn":2},{"ruleId":"254","severity":1,"message":"257","line":8,"column":1,"nodeType":"256","endLine":25,"endColumn":2},{"ruleId":"254","severity":1,"message":"257","line":11,"column":1,"nodeType":"256","endLine":52,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":3,"column":33,"nodeType":"260","messageId":"261","endLine":3,"endColumn":40},{"ruleId":"258","severity":1,"message":"262","line":3,"column":42,"nodeType":"260","messageId":"261","endLine":3,"endColumn":55},{"ruleId":"258","severity":1,"message":"263","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":32},{"ruleId":"258","severity":1,"message":"264","line":13,"column":3,"nodeType":"260","messageId":"261","endLine":13,"endColumn":9},{"ruleId":"258","severity":1,"message":"265","line":14,"column":3,"nodeType":"260","messageId":"261","endLine":14,"endColumn":7},{"ruleId":"258","severity":1,"message":"266","line":15,"column":3,"nodeType":"260","messageId":"261","endLine":15,"endColumn":13},{"ruleId":"258","severity":1,"message":"267","line":16,"column":3,"nodeType":"260","messageId":"261","endLine":16,"endColumn":11},{"ruleId":"258","severity":1,"message":"268","line":17,"column":3,"nodeType":"260","messageId":"261","endLine":17,"endColumn":8},{"ruleId":"258","severity":1,"message":"269","line":20,"column":8,"nodeType":"260","messageId":"261","endLine":20,"endColumn":16},{"ruleId":"270","severity":1,"message":"271","line":73,"column":34,"nodeType":"272","messageId":"273","endLine":73,"endColumn":36},{"ruleId":"254","severity":1,"message":"257","line":1,"column":1,"nodeType":"256","endLine":55,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":7,"column":26,"nodeType":"272","messageId":"273","endLine":7,"endColumn":28},{"ruleId":"270","severity":1,"message":"271","line":14,"column":28,"nodeType":"272","messageId":"273","endLine":14,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":16,"column":13,"nodeType":"276","messageId":"277","endLine":41,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":46,"column":32,"nodeType":"272","messageId":"273","endLine":46,"endColumn":34},{"ruleId":"258","severity":1,"message":"264","line":2,"column":9,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":25,"column":29,"nodeType":"280","endLine":25,"endColumn":97},{"ruleId":"254","severity":1,"message":"257","line":6,"column":1,"nodeType":"256","endLine":60,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":28,"column":28,"nodeType":"272","messageId":"273","endLine":28,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":30,"column":13,"nodeType":"276","messageId":"277","endLine":53,"endColumn":14},{"ruleId":"254","severity":1,"message":"257","line":1,"column":1,"nodeType":"256","endLine":64,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":12,"column":34,"nodeType":"272","messageId":"273","endLine":12,"endColumn":36},{"ruleId":"270","severity":1,"message":"271","line":18,"column":28,"nodeType":"272","messageId":"273","endLine":18,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":20,"column":13,"nodeType":"276","messageId":"277","endLine":50,"endColumn":14},{"ruleId":"270","severity":1,"message":"271","line":55,"column":32,"nodeType":"272","messageId":"273","endLine":55,"endColumn":34},{"ruleId":"281","severity":1,"message":"282","line":41,"column":33,"nodeType":"280","endLine":41,"endColumn":153},{"ruleId":"254","severity":1,"message":"257","line":1,"column":1,"nodeType":"256","endLine":56,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":375,"column":34,"nodeType":"272","messageId":"273","endLine":375,"endColumn":36},{"ruleId":"281","severity":1,"message":"282","line":41,"column":25,"nodeType":"280","endLine":45,"endColumn":26},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-unused-vars","'SIGN_UP' is defined but never used.","Identifier","unusedVar","'SIGN_UP_ERROR' is defined but never used.","'tableContentFromComments' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'CardBody' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]