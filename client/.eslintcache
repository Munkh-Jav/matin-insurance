[{"D:\\.Projects\\matin-insurance\\client\\src\\index.js":"1","D:\\.Projects\\matin-insurance\\client\\src\\history.js":"2","D:\\.Projects\\matin-insurance\\client\\src\\utils\\requireAuth.js":"3","D:\\.Projects\\matin-insurance\\client\\src\\utils\\checkIfAuth.js":"4","D:\\.Projects\\matin-insurance\\client\\src\\utils\\setAuthorizationToken.js":"5","D:\\.Projects\\matin-insurance\\client\\src\\actions\\types.js":"6","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Auth.js":"7","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Appointment.js":"8","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Video.js":"9","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Admin.js":"10","D:\\.Projects\\matin-insurance\\client\\src\\store.js":"11","D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\MainNavbar.js":"12","D:\\.Projects\\matin-insurance\\client\\src\\routes.js":"13","D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\AdminNavbar.js":"14","D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\AuthNavbar.js":"15","D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\AuthFooter.js":"16","D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\AdminFooter.js":"17","D:\\.Projects\\matin-insurance\\client\\src\\components\\Sidebar\\Sidebar.js":"18","D:\\.Projects\\matin-insurance\\client\\src\\actions\\userActions.js":"19","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\index.js":"20","D:\\.Projects\\matin-insurance\\client\\src\\sidebar.js":"21","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\VideoList.js":"22","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\BookAppointmentPage.js":"23","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\VideoPage.js":"24","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Login.js":"25","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Comments.js":"26","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Register.js":"27","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Appointments.js":"28","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Videos.js":"29","D:\\.Projects\\matin-insurance\\client\\src\\views\\Index.js":"30","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Settings.js":"31","D:\\.Projects\\matin-insurance\\client\\src\\api\\server.js":"32","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\videos.js":"33","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\admin.js":"34","D:\\.Projects\\matin-insurance\\client\\src\\utils\\validateEmail.js":"35","D:\\.Projects\\matin-insurance\\client\\src\\utils\\authCheck.js":"36","D:\\.Projects\\matin-insurance\\client\\src\\utils\\filterAppointments.js":"37","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ConfirmModal.js":"38","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\DetailModal.js":"39","D:\\.Projects\\matin-insurance\\client\\src\\actions\\adminActions.js":"40","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangeContactModal.js":"41","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\ContentCard.js":"42","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\TableCard.js":"43","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\BarGraph.js":"44","D:\\.Projects\\matin-insurance\\client\\src\\components\\Groups\\Comment.js":"45","D:\\.Projects\\matin-insurance\\client\\src\\utils\\serverRoutes.js":"46","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangePassModal.js":"47","D:\\.Projects\\matin-insurance\\client\\src\\utils\\tableContentFromVideos.js":"48","D:\\.Projects\\matin-insurance\\client\\src\\utils\\tableContentFromAppointments.js":"49","D:\\.Projects\\matin-insurance\\client\\src\\actions\\videoActions.js":"50","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\FormModal.js":"51","D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\Header.js":"52","D:\\.Projects\\matin-insurance\\client\\src\\actions\\appointmentActions.js":"53","D:\\.Projects\\matin-insurance\\client\\src\\actions\\commentActions.js":"54","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\UserAddCommentModal.js":"55","D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\UserHeader.js":"56","D:\\.Projects\\matin-insurance\\client\\src\\utils\\getVideoDetails.js":"57","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\stats.js":"58","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\auth.js":"59","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\appointments.js":"60","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\comments.js":"61","D:\\.Projects\\matin-insurance\\client\\src\\utils\\countdown.js":"62","D:\\.Projects\\matin-insurance\\client\\src\\utils\\charts.js":"63","D:\\.Projects\\matin-insurance\\client\\src\\components\\Groups\\AvatarGroup.js":"64","D:\\.Projects\\matin-insurance\\client\\src\\utils\\nFormat.js":"65","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\StatCard.js":"66","D:\\.Projects\\matin-insurance\\client\\src\\actions\\statActions.js":"67","D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\MainHeader.js":"68","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\User.js":"69","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\UserProfilePage.js":"70","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangeUserInfoModal.js":"71","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\UploadPicModal.js":"72","D:\\.Projects\\matin-insurance\\client\\src\\filepath.js":"73","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Forgot.js":"74","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\NewPassword.js":"75","D:\\.Projects\\matin-insurance\\client\\src\\utils\\requireAdmin.js":"76","D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\MainFooter.js":"77"},{"size":1688,"mtime":1613578092159,"results":"78","hashOfConfig":"79"},{"size":87,"mtime":1610126448801,"results":"80","hashOfConfig":"79"},{"size":962,"mtime":1610246131560,"results":"81","hashOfConfig":"79"},{"size":1273,"mtime":1613421758169,"results":"82","hashOfConfig":"79"},{"size":269,"mtime":1610246131561,"results":"83","hashOfConfig":"79"},{"size":2376,"mtime":1613004448683,"results":"84","hashOfConfig":"79"},{"size":2337,"mtime":1610126448802,"results":"85","hashOfConfig":"79"},{"size":1533,"mtime":1613608421376,"results":"86","hashOfConfig":"79"},{"size":1662,"mtime":1613601075598,"results":"87","hashOfConfig":"79"},{"size":1959,"mtime":1613699207963,"results":"88","hashOfConfig":"79"},{"size":343,"mtime":1612224175136,"results":"89","hashOfConfig":"79"},{"size":3946,"mtime":1613717773721,"results":"90","hashOfConfig":"79"},{"size":2535,"mtime":1613578024159,"results":"91","hashOfConfig":"79"},{"size":4343,"mtime":1613708267432,"results":"92","hashOfConfig":"79"},{"size":1965,"mtime":1613698977614,"results":"93","hashOfConfig":"79"},{"size":674,"mtime":1612278341803,"results":"94","hashOfConfig":"79"},{"size":803,"mtime":1613717686000,"results":"95","hashOfConfig":"79"},{"size":7850,"mtime":1613708409390,"results":"96","hashOfConfig":"79"},{"size":6256,"mtime":1613589159601,"results":"97","hashOfConfig":"79"},{"size":436,"mtime":1610998670476,"results":"98","hashOfConfig":"79"},{"size":1031,"mtime":1611331131941,"results":"99","hashOfConfig":"79"},{"size":3455,"mtime":1613716462693,"results":"100","hashOfConfig":"79"},{"size":12778,"mtime":1613716641893,"results":"101","hashOfConfig":"79"},{"size":8388,"mtime":1613716592641,"results":"102","hashOfConfig":"79"},{"size":3605,"mtime":1613715230035,"results":"103","hashOfConfig":"79"},{"size":3783,"mtime":1610907172892,"results":"104","hashOfConfig":"79"},{"size":5462,"mtime":1613715472048,"results":"105","hashOfConfig":"79"},{"size":4571,"mtime":1613716651201,"results":"106","hashOfConfig":"79"},{"size":5611,"mtime":1611705419817,"results":"107","hashOfConfig":"79"},{"size":5202,"mtime":1612224175136,"results":"108","hashOfConfig":"79"},{"size":12663,"mtime":1613421758128,"results":"109","hashOfConfig":"79"},{"size":135,"mtime":1610126448654,"results":"110","hashOfConfig":"79"},{"size":2035,"mtime":1613421756568,"results":"111","hashOfConfig":"79"},{"size":1044,"mtime":1610998670475,"results":"112","hashOfConfig":"79"},{"size":268,"mtime":1610998670476,"results":"113","hashOfConfig":"79"},{"size":86,"mtime":1612224175136,"results":"114","hashOfConfig":"79"},{"size":379,"mtime":1613702674775,"results":"115","hashOfConfig":"79"},{"size":1005,"mtime":1610907172890,"results":"116","hashOfConfig":"79"},{"size":1502,"mtime":1610826527516,"results":"117","hashOfConfig":"79"},{"size":1741,"mtime":1611705134176,"results":"118","hashOfConfig":"79"},{"size":5146,"mtime":1613084990329,"results":"119","hashOfConfig":"79"},{"size":1345,"mtime":1611702298060,"results":"120","hashOfConfig":"79"},{"size":9167,"mtime":1610748124414,"results":"121","hashOfConfig":"79"},{"size":1789,"mtime":1610494629152,"results":"122","hashOfConfig":"79"},{"size":3408,"mtime":1613004448684,"results":"123","hashOfConfig":"79"},{"size":376,"mtime":1613586311276,"results":"124","hashOfConfig":"79"},{"size":4543,"mtime":1612224175135,"results":"125","hashOfConfig":"79"},{"size":2856,"mtime":1612280467424,"results":"126","hashOfConfig":"79"},{"size":5194,"mtime":1610748124424,"results":"127","hashOfConfig":"79"},{"size":3197,"mtime":1613421757662,"results":"128","hashOfConfig":"79"},{"size":2352,"mtime":1610826527526,"results":"129","hashOfConfig":"79"},{"size":1570,"mtime":1611331131892,"results":"130","hashOfConfig":"79"},{"size":2332,"mtime":1613688476238,"results":"131","hashOfConfig":"79"},{"size":3316,"mtime":1612224175134,"results":"132","hashOfConfig":"79"},{"size":2058,"mtime":1611703410931,"results":"133","hashOfConfig":"79"},{"size":1217,"mtime":1611331131918,"results":"134","hashOfConfig":"79"},{"size":663,"mtime":1610826527527,"results":"135","hashOfConfig":"79"},{"size":567,"mtime":1610126448803,"results":"136","hashOfConfig":"79"},{"size":2574,"mtime":1613166527796,"results":"137","hashOfConfig":"79"},{"size":1229,"mtime":1610755008154,"results":"138","hashOfConfig":"79"},{"size":1974,"mtime":1612224175136,"results":"139","hashOfConfig":"79"},{"size":1843,"mtime":1610494629155,"results":"140","hashOfConfig":"79"},{"size":11431,"mtime":1610907172890,"results":"141","hashOfConfig":"79"},{"size":2292,"mtime":1613004448683,"results":"142","hashOfConfig":"79"},{"size":430,"mtime":1610581841406,"results":"143","hashOfConfig":"79"},{"size":3696,"mtime":1610494629153,"results":"144","hashOfConfig":"79"},{"size":682,"mtime":1610467208827,"results":"145","hashOfConfig":"79"},{"size":454,"mtime":1613615431056,"results":"146","hashOfConfig":"79"},{"size":1529,"mtime":1613716415573,"results":"147","hashOfConfig":"79"},{"size":15903,"mtime":1613718777091,"results":"148","hashOfConfig":"79"},{"size":3521,"mtime":1613589566551,"results":"149","hashOfConfig":"79"},{"size":3302,"mtime":1613004448684,"results":"150","hashOfConfig":"79"},{"size":99,"mtime":1613004448685,"results":"151","hashOfConfig":"79"},{"size":4431,"mtime":1613584994871,"results":"152","hashOfConfig":"79"},{"size":4055,"mtime":1613585540525,"results":"153","hashOfConfig":"79"},{"size":1099,"mtime":1613004448686,"results":"154","hashOfConfig":"79"},{"size":487,"mtime":1613717853488,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"3i9k97",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"158"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"158"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"158"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"158"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"158"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"158"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"158"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"158"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"158"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"158"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"158"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"158"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"158"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"158"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"158"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"158"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\.Projects\\matin-insurance\\client\\src\\index.js",[],["347","348"],"D:\\.Projects\\matin-insurance\\client\\src\\history.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\utils\\requireAuth.js",["349"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport history from \"../history\";\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        UNSAFE_componentWillMount() {\r\n            if (!this.props.logged_in) {\r\n                history.push('/auth/login');\r\n            }\r\n        }\r\n\r\n        UNSAFE_componentWillUpdate = nextProps => {\r\n            if (!nextProps.logged_in) {\r\n                history.push('/auth/login');\r\n            }\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <ComposedComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        logged_in: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            logged_in: state.auth.logged_in\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate);\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\checkIfAuth.js",["350"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport history from \"../history\";\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        UNSAFE_componentWillMount() {\r\n            if (this.props.logged_in) {\r\n                if(this.props.user.admin.toLowerCase() === 'true')\r\n                    history.push('/admin/index');\r\n                else\r\n                    history.push('/video');\r\n            }\r\n        }\r\n\r\n        UNSAFE_componentWillUpdate = nextProps => {\r\n            if (nextProps.logged_in) {\r\n                if(nextProps.user.admin.toLowerCase() === 'true')\r\n                    history.push('/admin/index');\r\n                else\r\n                    history.push('/video');\r\n            }\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <ComposedComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        logged_in: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            logged_in: state.auth.logged_in,\r\n            user: state.auth.user\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate);\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\setAuthorizationToken.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\actions\\types.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Auth.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Appointment.js",["351"],"\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport routes from \"routes.js\";\r\nimport MainNavbar from \"../components/Navbars/MainNavbar\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\n\r\nclass Appointment extends React.Component {\r\n  componentDidUpdate(e) {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/appointment\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 1; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Appointment\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n    \r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          <MainNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/appointment\" />\r\n          </Switch>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Appointment;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Video.js",["352","353","354"],"\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport MainNavbar from \"../components/Navbars/MainNavbar\";\r\n\r\nclass Video extends React.Component {\r\n  componentDidUpdate(e) {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/video\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 1; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Video Gallery\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          <MainNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/video\" />\r\n          </Switch>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\Admin.js",["355"],"\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport MainNavbar from \"components/Navbars/MainNavbar\";\r\n\r\nclass Admin extends React.Component {\r\n  componentDidUpdate(e) {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 1; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Welcome to your dashboard\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          logo={{\r\n            innerLink: \"/admin/index\",\r\n            /*imgSrc: require(\"assets/img/brand/novem-logo.png\").default,\r\n            imgAlt: \"...\"*/\r\n          }}\r\n        />\r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          <AdminNavbar/>\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/admin/index\" />\r\n          </Switch>\r\n          <Container fluid>\r\n            <AdminFooter />\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\store.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\MainNavbar.js",["356","357","358","359","360","361","362"],"D:\\.Projects\\matin-insurance\\client\\src\\routes.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\AdminNavbar.js",["363","364","365","366","367","368"],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Navbars\\AuthNavbar.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\AuthFooter.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\AdminFooter.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\actions\\userActions.js",["369","370","371","372"],"import setAuthorizationToken from '../utils/setAuthorizationToken';\r\nimport jwtDecode from 'jwt-decode';\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_IN_ERROR,\r\n    SIGN_UP,\r\n    SIGN_UP_ERROR,\r\n    SIGN_OUT,\r\n    UPDATE_TOKEN,\r\n    CHANGE_PASS,\r\n    CHANGE_PASS_ERROR, CHANGE_EMAIL_ERROR, CHANGE_EMAIL, CHANGE_AVATAR, CHANGE_AVATAR_ERROR\r\n} from './types';\r\nimport {signup_route, user_route} from \"../utils/serverRoutes\";\r\nimport history from \"../history\";\r\nimport server from \"../api/server\";\r\nimport {UPDATE_INFO, UPDATE_INFO_FAIL} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuthorizationToken(false);\r\n    dispatch({type: SIGN_OUT});\r\n    history.push('/auth/login');\r\n}\r\n\r\nexport const login = (formValues) => async dispatch => {\r\n    try{\r\n        const {data} = await server.post(user_route, {email: formValues.email, password : formValues.password});\r\n        localStorage.setItem('jwtToken', data.token);\r\n        setAuthorizationToken(data.token);\r\n        dispatch({type: SIGN_IN, user: jwtDecode(data.token)});\r\n        history.push('/admin/index');\r\n    }catch(e){\r\n        dispatch({type: SIGN_IN_ERROR, error: e.response.data});\r\n    }\r\n}\r\n\r\nexport const singup = (formValues) => async dispatch => {\r\n    try{\r\n        const {data} = await server.post(signup_route,\r\n             {name: formValues.first_name + \" \" + formValues.last_name,  email: formValues.email, password : formValues.password, profile_img : 'default.jpg'\r\n            , admin : false});\r\n        localStorage.setItem('jwtToken', data.token);\r\n        setAuthorizationToken(data.token);\r\n        dispatch({type: SIGN_UP, user: jwtDecode(data.token)});\r\n        history.push('/auth/login');\r\n    }catch(e){\r\n        dispatch({type: SIGN_UP_ERROR, error: e.response.data});\r\n        console.log(e.response);\r\n\r\n    }\r\n    console.log(formValues);\r\n}\r\n\r\nexport const changePass = (formValues) => async (dispatch, getState) => {\r\n    try{\r\n        const id = getState().auth.user.id;\r\n        const {data} = await server.post(user_route + \"/change-pass\", {id: id, old:formValues.old_password, password : formValues.new_password});\r\n\r\n        document.dispatchEvent(new CustomEvent('change_pass', { detail : {success: true} }));\r\n        updateToken(dispatch, data);\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('change_pass', { detail : {success: false} }));\r\n        if(!e.response)\r\n            return dispatch({type: CHANGE_PASS_ERROR, error: 'Server error'});\r\n        dispatch({type: CHANGE_PASS_ERROR, error: e.response.data});\r\n    }\r\n}\r\n\r\nexport const changePassByToken = (token, pw) => async () => {\r\n    try{\r\n        await server.post(user_route + \"/change-pass-forgot\", {token: token, password : pw});\r\n        document.dispatchEvent(new CustomEvent('change_pass_forgot', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('change_pass_forgot', { detail : {success: false} }));\r\n    }\r\n}\r\n\r\nexport const changeEmail = (email) => async (dispatch, getState) => {\r\n    try{\r\n        const id = getState().auth.user.id;\r\n        const {data} = await server.post(user_route + \"/change-email\", {id: id, email : email});\r\n        updateToken(dispatch, data);\r\n        document.dispatchEvent(new CustomEvent('change_email', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('change_email', { detail : {success: false} }));\r\n        if(!e.response)\r\n            return dispatch({type: CHANGE_EMAIL_ERROR, error: 'Server error'});\r\n        dispatch({type: CHANGE_EMAIL_ERROR, error: e.response.data});\r\n\r\n    }\r\n}\r\n\r\nexport const requestPass = (email) => async () => {\r\n    try{\r\n        await server.get(user_route + \"/generate-pass-token/\" + email);\r\n        document.dispatchEvent(new CustomEvent('request_pass', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('request_pass', { detail : {success: false} }));\r\n\r\n    }\r\n}\r\n\r\nexport const checkPassId = (id) => async () => {\r\n    try{\r\n        await server.get(user_route + \"/check-pass-id/\" + id);\r\n        document.dispatchEvent(new CustomEvent('check_pass_id', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('check_pass_id', { detail : {success: false} }));\r\n\r\n    }\r\n}\r\n\r\nexport const changeAvatar = (image) => async (dispatch, getState) => {\r\n    try{\r\n        const id = getState().auth.user.id;\r\n        const formData = new FormData();\r\n        formData.append(\"id\", id);\r\n        formData.append(\"formFile\", image);\r\n        const {data} = await server.post(user_route + \"/change-avatar\", formData);\r\n        updateToken(dispatch, data);\r\n        document.dispatchEvent(new CustomEvent('change_avatar', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('change_avatar', { detail : {success: false} }));\r\n        if(!e.response)\r\n            return dispatch({type: CHANGE_AVATAR_ERROR, error: 'Server error'});\r\n        dispatch({type: CHANGE_AVATAR_ERROR, error: e.response.data});\r\n\r\n    }\r\n}\r\n\r\nexport const updateToken = (dispatch, data) => {\r\n    localStorage.setItem('jwtToken', data);\r\n    setAuthorizationToken(data);\r\n    dispatch({type: UPDATE_TOKEN, user: jwtDecode(data)});\r\n}\r\n\r\nexport const updateUserInfo = (info) => async (dispatch, getState) => {\r\n    try{\r\n        const id = getState().auth.user.id;\r\n        const model = {\r\n            id : id,\r\n            name : info.fname + \" \" + info.lname\r\n        }\r\n        const {data} = await server.post(user_route + \"/change-name\", model,{\r\n            headers: {\r\n                'Authorization': axios.defaults.headers.common['Authorization']\r\n            }\r\n        });\r\n        document.dispatchEvent(new CustomEvent('change_name', { detail : {success: true} }));\r\n        updateToken(dispatch, data);\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('change_name', { detail : {success: false} }));\r\n        if(!e.response)\r\n            return dispatch({type: UPDATE_INFO_FAIL, error: 'Server error'});\r\n\r\n        dispatch({type: UPDATE_INFO_FAIL, error: e.response.data});\r\n    }\r\n}\r\n\r\n\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\index.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\sidebar.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\VideoList.js",["373","374","375","376"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\BookAppointmentPage.js",["377","378","379","380","381"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\VideoPage.js",["382","383","384","385"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Login.js",["386"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Comments.js",["387"],"\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Container,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nimport ContentCard from \"../../components/Cards/ContentCard\";\r\nimport Comment from \"../../components/Groups/Comment\";\r\nimport {getAllComments, updateComment, deleteComment} from \"../../actions/commentActions\";\r\nimport {connect} from 'react-redux';\r\nimport _ from \"lodash\";\r\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\r\nimport DetailModal from \"../../components/Modals/DetailModal\";\r\n\r\nclass Comments extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_confirm_modal_open: false,\r\n      selected_comment:{},\r\n      loading: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.getAllComments();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n    if(!_.isEqual(prevProps.comments, this.props.comments)){\r\n      this.setState({loading: [], is_confirm_modal_open:false});\r\n    }\r\n  }\r\n\r\n  approveComment = (commentToApprove) => {\r\n    const newComment = {...commentToApprove};\r\n    newComment.status = 1;\r\n    this.setState({loading: [...this.state.loading, newComment.id]});\r\n    this.props.updateComment(newComment);\r\n  }\r\n\r\n  denyComment = (commentToApprove, confirmed) => {\r\n    if(!confirmed){\r\n      this.openConfirmModal(commentToApprove);\r\n    }else {\r\n      this.setState({loading: [...this.state.loading, commentToApprove.id]});\r\n      this.props.deleteComment(commentToApprove);\r\n    }\r\n  }\r\n\r\n  openConfirmModal = (comment) => {\r\n    this.setState({is_confirm_modal_open: true, selected_comment: comment});\r\n  }\r\n\r\n  closeConfirmModal = () => {\r\n    this.setState({is_confirm_modal_open:false, selected_comment: {}})\r\n  }\r\n\r\n  openConfirmModal = (comment) => {\r\n    this.setState({is_confirm_modal_open: true, selected_comment: comment});\r\n  }\r\n\r\n  closeConfirmModal = () => {\r\n    this.setState({is_confirm_modal_open:false, selected_comment: {}})\r\n  }\r\n\r\n\r\n  getComments = () => {\r\n    return this.props.comments.map(comment => {\r\n      return <Comment\r\n                key={comment.id} \r\n                comment={comment} \r\n                toggleComments={true} \r\n                hide_top_button={true}\r\n                loading={this.state.loading}\r\n                approve_callback={this.approveComment}\r\n                deny_callback={this.denyComment}\r\n                />\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n            <ContentCard\r\n                    title=\"Comments\"\r\n                    top_button=\"See all\"\r\n                    top_callback={this.showSomething}\r\n                    toggleComments={true}\r\n                >\r\n                  {this.getComments()}\r\n            </ContentCard>\r\n              <DetailModal\r\n                  isOpen={this.state.is_confirm_modal_open}\r\n                  onRequestClose={this.closeConfirmModal}\r\n                  width=\"55%\"\r\n              >\r\n                <ConfirmModal\r\n                    title=\"Are you sure you want to delete this comment ?\"\r\n                    object={this.state.selected_comment}\r\n                    onConfirm={this.denyComment}\r\n                    onDeny={this.closeConfirmModal}\r\n                />\r\n              </DetailModal>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.comments.comments\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAllComments,updateComment,deleteComment})(Comments);\r\n\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Register.js",["388","389","390","391","392"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Appointments.js",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Videos.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"\r\nimport React from \"react\";\r\nimport _ from 'lodash';\r\n\r\n// reactstrap components\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Media,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nimport TableCard from \"../../components/Cards/TableCard\";\r\nimport tableContentFromVideos from \"../../utils/tableContentFromVideos\";\r\nimport {getVideos, addVideo, updateVideo, deleteVideo} from \"../../actions/videoActions\";\r\nimport {connect} from 'react-redux';\r\nimport FormModal from \"../../components/Modals/FormModal\";\r\nimport DetailModal from \"../../components/Modals/DetailModal\";\r\nimport ConfirmModal from \"../../components/Modals/ConfirmModal\";\r\n\r\nclass Videos extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          is_modal_open: false,\r\n          is_confirm_modal_open: false,\r\n          selected_video:{},\r\n          loading:[],\r\n          videos: this.props.videos,\r\n          videoTableContent: [{\r\n            title: \"Loading...\",\r\n            italic : true,\r\n            donTrim : false,\r\n            contents: []\r\n          }]\r\n        }\r\n      }\r\n\r\n  componentDidMount() {\r\n    this.props.getVideos();\r\n    this.getVideoDetails();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n    if(!_.isEqual(prevState.videos, this.props.videos)){\r\n      this.getVideoDetails();\r\n    }\r\n  }\r\n\r\n\r\n  getVideoDetails = async() =>{\r\n    const content = await tableContentFromVideos(this.state.videos, [\"title\", \"views\", \"likes\", \"dislikes\", \"buttons\"], [{callback:this.editVideo},{callback: this.deleteVideo}]);\r\n    this.setState({videos: this.props.videos, videoTableContent : content, loading: [], is_confirm_modal_open:false, selected_video: {}})\r\n  }\r\n\r\n  editVideo = (video, confirmed) => {\r\n    if(!confirmed){\r\n      this.setState({selected_video:video})\r\n      this.openModal();\r\n    }else{\r\n      this.props.updateVideo({...video, id: this.state.selected_video.id})\r\n    }\r\n  }\r\n\r\n  addVideo = (e, video) => {\r\n    e.preventDefault();\r\n    this.props.addVideo(video);\r\n  }\r\n\r\n  deleteVideo = (video, confirmed) => {\r\n    if(!confirmed){\r\n      this.openConfirmModal(video);\r\n    }else{\r\n      this.props.deleteVideo(video);\r\n    }\r\n  }\r\n\r\n\r\n  videoClick = (e, id) => {\r\n    e.preventDefault();\r\n    const url = this.props.videos[this.props.videos.findIndex(x => x.id === id)].video_url;\r\n    const win = window.open(url, '_blank');\r\n    win.focus();\r\n  }\r\n\r\n  openModal = (e) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    this.setState({is_modal_open: true});\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({is_modal_open:false, selected_video: {}})\r\n  }\r\n\r\n  openConfirmModal = (video) => {\r\n    this.setState({is_confirm_modal_open: true, selected_video: video});\r\n  }\r\n\r\n  closeConfirmModal = () => {\r\n    this.setState({is_confirm_modal_open:false, selected_video: {}})\r\n  }\r\n\r\n  modalSubmit = (e, video) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    if(_.isEmpty(this.state.selected_video))\r\n      this.addVideo(e, video);\r\n    else\r\n      this.editVideo(video, true);\r\n    this.closeModal(e);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n            <TableCard\r\n                    title=\"Video Activity\"\r\n                    top_button=\"Add Video\"\r\n                    top_callback={this.openModal}\r\n                    hide_top_button = {false}\r\n                    add_new_vid = {true}\r\n                    cols={[\"\", \"Title\", \"Views\", \"Likes\", \"Dislikes\", \"Actions\"]}\r\n                    with_images={true}\r\n                    loading={this.state.loading}\r\n                    rows={this.state.videoTableContent}\r\n                    rowClick={this.videoClick}\r\n                    dark={localStorage.getItem(\"dark\") === 'true'}\r\n                />\r\n                 <DetailModal\r\n                  isOpen={this.state.is_modal_open}\r\n                  onRequestClose={this.closeModal}\r\n              >\r\n                  <FormModal\r\n                      dark={localStorage.getItem(\"dark\") === 'true'}\r\n                      closeModal={this.closeModal}\r\n                      object={this.state.selected_video}\r\n                      onSubmit={this.modalSubmit}\r\n                  />\r\n              </DetailModal>\r\n\r\n              <DetailModal\r\n                  isOpen={this.state.is_confirm_modal_open}\r\n                  onRequestClose={this.closeConfirmModal}\r\n                  width=\"55%\"\r\n              >\r\n                <ConfirmModal\r\n                    title=\"Are you sure you want to delete this video ?\"\r\n                    object={this.state.selected_video}\r\n                    onConfirm={this.deleteVideo}\r\n                    onDeny={this.closeConfirmModal}\r\n                />\r\n              </DetailModal>\r\n            </div>\r\n          </Row>\r\n          <Row className=\"mt-5\">\r\n            <div className=\"col\">\r\n              {/* TODO: PUT CALENDAR SCHEDULE IN HERE */ }\r\n            </div>\r\n          </Row>\r\n         \r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    videos: state.videos.videos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getVideos, addVideo, updateVideo, deleteVideo})(Videos);\r\n\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\views\\Index.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Settings.js",["423"],"\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport UserHeader from \"components/Headers/UserHeader.js\";\r\nimport ChangePassModal from \"../../components/Modals/ChangePassModal\";\r\nimport ChangeContactModal from \"../../components/Modals/ChangeContactModal\";\r\nimport DetailModal from \"../../components/Modals/DetailModal\";\r\nimport {changePass, changeEmail} from \"../../actions/userActions\";\r\nimport {getAdminInfo, updateAdminInfo} from \"../../actions/adminActions\";\r\nimport {connect} from 'react-redux'\r\nimport validateEmail from \"../../utils/validateEmail\";\r\nimport _ from \"lodash\";\r\n\r\nclass Settings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email : \"\",\r\n      contact : this.props.contact,\r\n      is_pass_modal_open: false,\r\n      is_contact_modal_open: false\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAdminInfo();\r\n    document.addEventListener('change_email', e=> {\r\n      if(e.detail.success){\r\n        this.showSnackBar(\"Email updated !\");\r\n      }else{\r\n        this.showSnackBar(\"Something went wrong\");\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n    if(!_.isEqual(prevProps.contact, this.props.contact)){\r\n      this.setState({contact: this.props.contact});\r\n    }\r\n  }\r\n\r\n  //Password Modal Handlers\r\n  openPassModal = (e) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    this.setState({is_pass_modal_open: true});\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({  [e.target.name]: e.target.value});\r\n  }\r\n\r\n  closePassModal = (e, updated, error) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    this.setState({is_pass_modal_open:false})\r\n    if(updated)\r\n      this.showSnackBar(\"Password updated !\");\r\n    if(error)\r\n      this.showSnackBar(\"Something went wrong\");\r\n  }\r\n\r\n  modalSubmitPass = (formContent) => {\r\n    this.props.changePass(formContent);\r\n  }\r\n\r\n  //Contact Modal Handlers \r\n  openContactModal = (e) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    this.setState({is_contact_modal_open: true});\r\n  }\r\n\r\n  closeContactModal = (e, updated) => {\r\n    if(e)\r\n      e.preventDefault();\r\n    this.setState({is_contact_modal_open:false})\r\n    if(updated)\r\n      this.showSnackBar(\"Info updated !\");\r\n  }\r\n\r\n  modalSubmitContact = (formContent) => {\r\n    this.props.updateAdminInfo(formContent);\r\n  }\r\n\r\n  updateEmail = e => {\r\n      e.preventDefault();\r\n      if(!validateEmail(this.state.email) || this.state.email.length < 5)\r\n        return this.showSnackBar(\"Invalid Email\");\r\n      this.props.changeEmail(this.state.email);\r\n  }\r\n\r\n  showSnackBar(message){\r\n    const x = document.getElementById(\"snackbar\");\r\n    x.className = \"show\";\r\n\r\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n    this.setState({snackbar_message: message})\r\n  }\r\n\r\n  render() {\r\n    const modal_width = (window.innerWidth < 600) ? \"10%\": undefined;\r\n\r\n    return (\r\n      <>\r\n        <UserHeader />\r\n        {/* Page content */}\r\n              <Card className=\"bg-secondary shadow\">\r\n                <CardHeader className=\"bg-white border-0\">\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs=\"8\">\r\n                      <h3 className=\"mb-0\">My account</h3>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Admin Account\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup >\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-email\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-email\"\r\n                              placeholder=\"Enter new email address\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              onChange={this.onChange}\r\n                              value={this.state.email}\r\n                            />\r\n\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup className=\"update-btn\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className=\"btn bg-red\"\r\n                                onClick={this.updateEmail}\r\n                                size=\"sm\"\r\n                            >\r\n                              Update\r\n                            </Button>\r\n                          </FormGroup>\r\n\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-password\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-password\"\r\n                              defaultValue=\"******\"\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            className=\"btn bg-red\"\r\n                            onClick={this.openPassModal}\r\n                            size=\"sm\"\r\n                          >\r\n                            Change password\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                      <DetailModal\r\n                          isOpen={this.state.is_pass_modal_open}\r\n                          onRequestClose={this.closePassModal}\r\n                          width = {modal_width}\r\n                          >\r\n                            <ChangePassModal\r\n                                  closeModal={this.closePassModal}\r\n                                  onSubmit={this.modalSubmitPass}\r\n                              />\r\n                      </DetailModal>\r\n                    </div>\r\n                    <hr className=\"my-4\" />\r\n                    {/* Contact Info */}\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                      Contact information\r\n                    </h6>\r\n                    <div className=\"pl-lg-4\">\r\n                      <Row>\r\n                        <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-address\"\r\n                            >\r\n                              Address\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-address\"\r\n                              value={this.state.contact.address}\r\n                              placeholder=\"Home Address\"\r\n                              type=\"text\"\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"input-country\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Input\r\n                                className=\"form-control-alternative\"\r\n                                id=\"input-phone\"\r\n                                value={this.state.contact.phone}\r\n                                placeholder=\"Phone\"\r\n                                disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-city\"\r\n                            >\r\n                              City\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              value={this.state.contact.city}\r\n                              id=\"input-city\"\r\n                              placeholder=\"City\"\r\n                              type=\"text\"\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Country\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              value={this.state.contact.country}\r\n                              id=\"input-country\"\r\n                              placeholder=\"Country\"\r\n                              type=\"text\"\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"input-country\"\r\n                            >\r\n                              Postal code\r\n                            </label>\r\n                            <Input\r\n                              className=\"form-control-alternative\"\r\n                              id=\"input-postal-code\"\r\n                              value={this.state.contact.postal_code}\r\n                              placeholder=\"Postal code\"\r\n                              disabled\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        </Row>\r\n                        <Row>                   \r\n                        <Col lg=\"4\">\r\n                             <Button\r\n                            color=\"primary\"\r\n                            className=\"btn bg-red\"\r\n                            onClick={this.openContactModal}\r\n                            size=\"sm\"\r\n                          >\r\n                            Change Information\r\n                          </Button>\r\n                        </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <DetailModal\r\n                      isOpen={this.state.is_contact_modal_open}\r\n                      onRequestClose={this.closeContactModal}\r\n                      width={modal_width}\r\n                      >\r\n                      <ChangeContactModal\r\n                        contact={this.state.contact}\r\n                        closeModal={this.closeContactModal}\r\n                        onSubmit={this.modalSubmitContact}\r\n                     />  \r\n              </DetailModal>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n              <div id=\"snackbar\">{this.state.snackbar_message}</div>\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    email: state.auth.user.email,\r\n    contact : state.admin.info\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {changePass, changeEmail, getAdminInfo, updateAdminInfo})(Settings);\r\n","D:\\.Projects\\matin-insurance\\client\\src\\api\\server.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\reducers\\videos.js",["424"],"import {\r\n    GET_VIDEO,\r\n    GET_VIDEOS,\r\n    GET_VIDEO_FAIL,\r\n    GET_VIDEOS_FAIL,\r\n    POST_VIDEO,\r\n    POST_VIDEO_FAIL,\r\n    DELETE_VIDEO_FAIL,\r\n    DELETE_VIDEO, UPDATE_VIDEO, UPDATE_VIDEO_FAIL, CLEAN_VIDEO\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    videos: [],\r\n    video: {},\r\n    videos_error:'',\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_VIDEOS:\r\n            return {\r\n                ...state,\r\n                videos: action.videos,\r\n                videos_error: ''\r\n            };\r\n\r\n        case CLEAN_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: {},\r\n            };\r\n    \r\n\r\n        case POST_VIDEO:\r\n            return {\r\n                ...state,\r\n                videos: [...state.videos, action.video],\r\n                videos_error: ''\r\n            };\r\n\r\n        case GET_VIDEO:\r\n            return {\r\n                ...state,\r\n                video: action.video,\r\n                videos_error: ''\r\n            };\r\n        case UPDATE_VIDEO:\r\n            return {\r\n                ...state,\r\n                videos: state.videos.map((item) => {\r\n                    if (item.id !== action.video.id) {\r\n                        return item\r\n                    }\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...action.video\r\n                    }\r\n                }),\r\n                videos_error: ''\r\n            };\r\n        case DELETE_VIDEO:\r\n            return {\r\n                ...state,\r\n                videos: state.videos.filter(item => item.id !== action.video.id),\r\n                videos_error: ''\r\n            };\r\n        case UPDATE_VIDEO_FAIL:\r\n        case DELETE_VIDEO_FAIL:\r\n        case POST_VIDEO_FAIL:\r\n        case GET_VIDEOS_FAIL:\r\n        case GET_VIDEO_FAIL:\r\n            return {\r\n                ...state,\r\n                videos_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\admin.js",["425"],"import {\r\n    GET_INFO,\r\n    GET_INFO_FAIL, UPDATE_INFO, UPDATE_INFO_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    info: {\r\n        id:\"\",\r\n        key:\"\",\r\n        address:\"\",\r\n        phone:\"\",\r\n        city:\"\",\r\n        country:\"\",\r\n        postal_code:\"\",\r\n    },\r\n    info_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_INFO:\r\n            return {\r\n                ...state,\r\n                info: action.info,\r\n                info_error: ''\r\n            };\r\n        case GET_INFO_FAIL:\r\n            return {\r\n                ...state,\r\n                info_error: action.error\r\n            };\r\n        case UPDATE_INFO:\r\n            return {\r\n                ...state,\r\n                info: action.info,\r\n                info_error: ''\r\n            };\r\n        case UPDATE_INFO_FAIL:\r\n            return {\r\n                ...state,\r\n                info_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\validateEmail.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\utils\\authCheck.js",["426"],"import store from \"../store\";\r\nexport default () => store.getState().auth.logged_in;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\filterAppointments.js",["427"],"export default function filterAppointments (appointments, max){\r\n    if(!max) max=5\r\n    var waitingAppointments = [];\r\n    appointments.map(appointment => {\r\n        if(max>0) {\r\n            if (appointment.status === 0) {\r\n                waitingAppointments.push(appointment);\r\n                max--;\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    return waitingAppointments;\r\n  }","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ConfirmModal.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\DetailModal.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\actions\\adminActions.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangeContactModal.js",["428"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Form,\r\n    Col,\r\n    Row,\r\n    FormGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    InputGroup} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ChangeContactModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            content : {\r\n                address : this.props.contact.address,\r\n                city : this.props.contact.city,\r\n                country : this.props.contact.country,\r\n                postal_code : this.props.contact.postal_code,\r\n                phone : this.props.contact.phone\r\n            },\r\n            error: '',\r\n            changed:false,\r\n            isLoading: false,\r\n        }\r\n    this.onChange = this.onChange.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ content: { ...this.state.content, [e.target.name]: e.target.value} });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('change_contact', e => {\r\n            if(e.detail.success){\r\n                this.props.closeModal(undefined, true);\r\n            }else{\r\n                this.props.closeModal(undefined, false, true);\r\n            }\r\n        }, false);\r\n    }\r\n\r\n\r\n    onSubmitContactInfo = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.content);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {error: state_error, changed} = this.state;\r\n        const error = (this.props.error) ? this.props.error : state_error;\r\n\r\n        return (\r\n            <Card className={`shadow`}>\r\n                <Form className=\"m-5\" onSubmit={this.onSubmitContactInfo}>\r\n                    <h1 className=\"ml--3 mb-3\">Change Contact Information</h1>\r\n              <FormGroup className=\"mb-0\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"fas fa-map-marker\"/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New Address\" type=\"text\" name=\"address\" value={this.state.content.address}  onChange={this.onChange}/>\r\n                </InputGroup>\r\n                <Row>\r\n                <Col xs=\"6\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-city\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New City\" type=\"text\" name=\"city\" value={this.state.content.city} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                <Col xs=\"6\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-flag\"/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New Country\" type=\"text\" name=\"country\" value={this.state.content.country} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col xs=\"4\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-mail-bulk\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"Postal Code\" type=\"text\" name=\"postal_code\" value={this.state.content.postal_code} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                <Col xs=\"8\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-phone\"/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New Contact Phone\" type=\"text\" name=\"phone\" value={this.state.content.phone} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                </Row>\r\n              </FormGroup>\r\n                    {error && <p style={{color: 'red', fontSize: 12}}>{error}</p>}\r\n              <div className=\" mt-3\">\r\n                  <Button color=\"primary\"\r\n                   type=\"submit\" \r\n                   className=\"center\"\r\n                   >\r\n                        Change\r\n                  </Button>\r\n                </div>\r\n              \r\n            </Form>\r\n        \r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.change_pass_error,\r\n        message: state.auth.change_pass_message\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChangeContactModal);\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\ContentCard.js",["429","430","431","432","433"],"import React from 'react';\r\nimport {Button, Card, CardBody, CardHeader, Row, Form,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    InputGroup} from \"reactstrap\";\r\n\r\nclass ContentCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                            <h3 className=\"mb-0\">{this.props.title}</h3>\r\n                        </div>\r\n                        \r\n                        <div className=\"col text-right\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={this.props.top_callback}\r\n                                size=\"sm\"\r\n                                style={{ display :  (this.props.hide_top_button) && \"none\"}}\r\n                            >\r\n                                {this.props.top_button}\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                    \r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    {this.props.children}\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentCard;","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\TableCard.js",["434"],"import React from 'react';\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    CardHeader, DropdownItem, DropdownMenu, DropdownToggle,\r\n    Media,\r\n    Progress,\r\n    Row,\r\n    Table,\r\n    UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport JsxParser from \"react-jsx-parser\";\r\nimport AvatarGroup from \"../Groups/AvatarGroup\";\r\n\r\nclass TableCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            dark: this.props.dark\r\n        }\r\n    }\r\n\r\n\r\n    getCols() {\r\n        return this.props.cols.map(col => {\r\n            return (\r\n                <th key={col} scope=\"col\">{col}</th>\r\n            )\r\n        })\r\n    }\r\n\r\n    getRows() {\r\n        return this.props.rows.map((row, key) => {\r\n            return (\r\n                <tr key={key} >\r\n                    <th scope=\"row\" onClick={(e) => this.props.rowClick(e, row.id)} style={{maxWidth: (row.image) ?'200px': '180px', cursor: 'pointer', overflow: 'hidden', textOverflow: (row.donTrim) ? 'ellipsis' : 'none'}}>\r\n                        {(row.image && this.props.with_images) ?\r\n                            <Media className=\"align-items-center\" style={{display:'contents'}}>\r\n                                <a className=\"avatar avatar-xsm mr-0  thumbnail-display\" style={{display:'inline-table'}} onClick={e => e.preventDefault()}>\r\n                                    <img alt={row.title} src={`${row.image}`} />\r\n                                </a>\r\n                                <Media style={{display:'inline'}}>\r\n                                    <span className=\"mb-0 text-sm\">\r\n                                      {row.title}\r\n                                    </span>\r\n                                </Media>\r\n                            </Media>\r\n                        :<span style={{fontStyle: (row.italic) ? 'italic' : 'normal' }}>{row.title}</span>}\r\n                    </th>\r\n                    {this.getRowContent(row.contents, row.object)}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    getButtons(col, object){\r\n        if(this.props.loading.includes(object.id)){\r\n            return (\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            )\r\n        }\r\n        return col.value.map((btn, key) => {\r\n            return (\r\n                <Button\r\n                color=\"primary\"\r\n                className={btn.class}\r\n                onClick={() => btn.callback(object)}\r\n                size=\"sm\"\r\n                key={key}\r\n            >\r\n                {btn.title}\r\n            </Button>\r\n            )\r\n        })\r\n    }\r\n\r\n    getRowContent(row, object){\r\n        return row.map((col, key) => {\r\n            switch (col.type){\r\n                case \"custom_element\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <JsxParser renderInWrapper={false} jsx={col.customElement} />\r\n                            {\" \"}\r\n                            {this.value(col)}\r\n                        </td>\r\n                    );\r\n                case \"arrow\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <i className={`fas ${col.arrow.up ? 'fa-arrow-up text-success' : 'fa-arrow-down text-danger' } mr-1`} />\r\n                            {\" \"}\r\n                        </td>\r\n                    );\r\n                case \"badge\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <Badge color=\"\" className=\"badge-dot mr-4\" style={{ fontStyle : \"italic\"}} >\r\n                                <i className={col.class} />\r\n                                {this.value(col)}\r\n                            </Badge>\r\n                        </td>\r\n                    );\r\n                case \"avatar-group\":\r\n                    return (\r\n                        <td key={key}>\r\n                            <AvatarGroup task_id={col.task_id + \"\"} />\r\n                        </td>\r\n                    );\r\n                case \"progress\":\r\n                    return (\r\n                        <td  key={key}>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <span className=\"mr-2\">{this.value(col)}</span>\r\n                                <div>\r\n                                    <Progress\r\n                                        max=\"100\"\r\n                                        value={col.value}\r\n                                        barClassName={col.class}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    );\r\n\r\n                case \"button-group\":\r\n                    return (\r\n                        <td key={key}>\r\n                            {\r\n                                this.getButtons(col, object)\r\n                            }\r\n                        </td>\r\n                    )\r\n                case \"buttons\":\r\n                    return (\r\n                        <td className=\"text-right\"  key={key}>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle\r\n                                    className=\"btn-icon-only text-light\"\r\n                                    href=\"#pablo\"\r\n                                    role=\"button\"\r\n                                    size=\"sm\"\r\n                                    color=\"\"\r\n                                    onClick={e => e.preventDefault()}\r\n                                >\r\n                                    <i className=\"fas fa-ellipsis-v\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                    {this.getActions(col.actions)}\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </td>\r\n                    )\r\n                default:\r\n                    return (\r\n                        <td key={key} className={`text-wrap ${(col.centered) ? \"text-center\" : \"\"}`}>\r\n                            {this.value(col)}\r\n                        </td>\r\n                    );\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    getActions(actions) {\r\n        return actions.map ((action, key) => {\r\n            return (\r\n                <DropdownItem\r\n                    href=\"#pablo\"\r\n                    key={key}\r\n                    onClick={e => e.preventDefault()}\r\n                >\r\n                    {action.title}\r\n                </DropdownItem>\r\n            )\r\n        })\r\n    }\r\n\r\n    value(col) {\r\n        return (\r\n            <>\r\n                {col.money && \"$\"}\r\n                {!col.custom_contains_value && col.value}\r\n                {col.percentage && \"%\"}\r\n            </>\r\n        )\r\n    }\r\n\r\n    toggleTheme= (e) =>{\r\n        e.preventDefault();\r\n        localStorage.setItem(\"dark\", (!this.state.dark).toString());\r\n        this.setState({dark: !this.state.dark})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={`${this.state.dark && 'bg-default'} shadow`}>\r\n                <CardHeader className={`${this.state.dark && 'bg-transparent'} border-0`}>\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\">\r\n                            <h3 className={`${this.state.dark && 'text-white'} mb-0`}>{this.props.title}</h3>\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={this.toggleTheme}\r\n                                size=\"sm\"\r\n                            >\r\n                                <i className={`fa ${this.state.dark ? 'fa-sun' : 'fa-moon'}`}/>\r\n                            </Button>\r\n                            \r\n                            <Button \r\n                                color=\"primary\"\r\n                                onClick={this.props.top_callback}\r\n                                size=\"sm\"\r\n                                style={{ display :  (this.props.hide_top_button) && \"none\"}}\r\n                            >\r\n                                {this.props.top_button}\r\n                            </Button>\r\n    \r\n                        </div>\r\n                    </Row>\r\n                </CardHeader>\r\n                <Table className={`${this.state.dark && 'table-dark'} align-items-center table-flush`} responsive>\r\n                    <thead className={`${this.state.dark ? 'thead-dark' : 'thead-light'}`}>\r\n                        <tr>\r\n                            {this.getCols()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.getRows()}\r\n                    </tbody>\r\n                </Table>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableCard;","D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\BarGraph.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Groups\\Comment.js",["435"],"import React from 'react';\r\nimport {Button, Col, Row} from \"reactstrap\";\r\nimport countdown from \"../../utils/countdown\";\r\nimport filepath from \"../../filepath\";\r\n\r\nclass Comment extends React.Component{\r\n\r\n    getDate (date){\r\n        let value = countdown(date, true);\r\n        if(value.substring(value.length - 6, value.length) === \"{none}\") {\r\n            return value.substring(0, value.length - 6);\r\n        }\r\n        return countdown(date, true) + \" ago\";\r\n    }\r\n\r\n    getButtons(status){\r\n        if(this.props.loading && this.props.loading.includes(this.props.comment.id)){\r\n            return (\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {(status === 0) &&\r\n                <Button\r\n                    className=\"button bg-gradient-green \"\r\n                    size=\"sm\"\r\n                    onClick={() => this.props.approve_callback(this.props.comment)}\r\n                    style={{width: '50%', height: \"fit-content\"}}>\r\n\r\n                    <i className=\"fas fa-check text-white\"></i>\r\n                </Button>\r\n                }\r\n                <Button\r\n                    className=\"button bg-gradient-red\"\r\n                    size=\"sm\"\r\n                    onClick={  () => this.props.deny_callback(this.props.comment)}\r\n                    style={{width:'120%', height: \"fit-content\"}}>\r\n                    <i className=\"fas fa-times text-white\"></i>\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {user_avatar, comment_text, user_name, date, video_title, status} = this.props.comment;\r\n\r\n        return (\r\n            <Row className=\"mb-4\">\r\n                <Col className=\"comment\">\r\n                    <Row className=\"align-items-center\">\r\n                        <div className=\"col\" style={{width: \"36px\"}}>\r\n                        <span className=\"avatar avatar-sm rounded-circle\">\r\n                            <img src={filepath + `/profile-pics/${user_avatar}`}/>\r\n                        </span>\r\n                            <h3 className=\"mb-0 name\">\r\n                                {user_name}\r\n                                {\r\n                                    (status ===0) &&\r\n                                    <span className=\"font-italic text-red\">\r\n                                       {\" - Waiting approval\"}\r\n                                    </span>\r\n                                }\r\n                            </h3>\r\n                            <h5 className=\"mb-0 video\">In {video_title}</h5>\r\n                    </div>\r\n                            <div className=\"text-right date\">\r\n                                {this.getDate(date)}\r\n                            </div>\r\n                            \r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col comment-content\">\r\n                        {comment_text}\r\n                        </div>\r\n                        <div className=\"btn-group text-right mr-3 mt--2\">\r\n                            {(!this.props.hide_buttons) && this.getButtons(status)}\r\n\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","D:\\.Projects\\matin-insurance\\client\\src\\utils\\serverRoutes.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangePassModal.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\utils\\tableContentFromVideos.js",["436","437","438"],"import nFormatter from './nFormat'\r\nimport getVideoDetails from \"./getVideoDetails\";\r\n\r\n\r\nexport default async (videos, filters, buttons) => {\r\n    const table_data = [];\r\n\r\n    if(!videos || videos.length === 0 )\r\n        return [{\r\n            title: \"No videos yet\",\r\n            italic : true,\r\n            donTrim : false,\r\n            contents: []\r\n        }];\r\n\r\n    await Promise.all(videos.map(async video => {\r\n        if(!video.video_url || video.video_url.length < 5){\r\n            return;\r\n        }\r\n       var videoData = await getVideoDetails(video.video_url);\r\n       if(videoData.items.length < 1){\r\n           return;\r\n       }\r\n       var videoThumbnail = videoData.items[0].snippet.thumbnails.standard.url;\r\n       var videoStats = videoData.items[0].statistics;\r\n\r\n\r\n        const object = {\r\n            title: \"\",\r\n            image: videoThumbnail,\r\n            url: video.video_url,\r\n            object: video,\r\n            id: video.id,\r\n            contents: []\r\n        }\r\n        filters.map(filter => {\r\n            let content = {};\r\n            switch (filter){\r\n\r\n                case \"title\" :\r\n                    content = {\r\n                        value: video.video_title,\r\n                        centered: false\r\n                    }\r\n                    break; \r\n                case \"views\" : \r\n                content = {\r\n                    value: nFormatter(videoStats.viewCount, 1),\r\n                    centered: true\r\n                }\r\n                \r\n                    break;\r\n                case \"likes\" :\r\n                    content = {\r\n                        value: nFormatter(videoStats.likeCount, 0),\r\n                        centered: true\r\n                    }\r\n                    break;\r\n                case \"dislikes\" : \r\n                    content = {\r\n                        value: nFormatter(videoStats.dislikeCount, 0),\r\n                        centered: true\r\n                    }\r\n                    break;\r\n                case \"buttons\":\r\n                    content = {\r\n                        type: \"button-group\",\r\n                        value: [\r\n                            {\r\n                                title: \"Edit\",\r\n                                callback: buttons[0].callback,\r\n                                class: 'bg-gradient-info border-0'\r\n                            },\r\n                            {\r\n                                title: \"Delete\",\r\n                                callback: buttons[1].callback,\r\n                                class: 'bg-gradient-danger border-0'\r\n                            }\r\n                        ]\r\n                    }\r\n                \r\n            }\r\n            object.contents.push(content);\r\n        });\r\n        \r\n        table_data.push(object);\r\n    }))\r\n    return table_data;\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\tableContentFromAppointments.js",["439","440","441","442","443","444"],"export default (appointments, filters, buttons) => {\r\n    const table_data = [];\r\n    let had_button_case = false;\r\n\r\n    if(!appointments || appointments.length === 0 )\r\n        return [{\r\n            title: \"No pending appointments\",\r\n            italic : true,\r\n            donTrim : false,\r\n            contents: []\r\n        }];\r\n\r\n    appointments.map(appointment => {\r\n        const object = {\r\n            title: appointment.client_name,\r\n            id: appointment.id,\r\n            object: appointment,\r\n            contents: []\r\n        }\r\n        filters.map(filter => {\r\n            let content = {};\r\n            switch (filter){\r\n                case \"users\":\r\n                    content = {\r\n                        type:\"avatar-group\",\r\n                        task_id:appointment._id\r\n                    };\r\n                    break;\r\n                case \"status\":\r\n                    content = {\r\n                        type:\"badge\",\r\n                        value: getStatus(appointment.status).status,\r\n                        class: getStatus(appointment.status).class\r\n                    };\r\n                    break;\r\n                case \"progress\":\r\n                    content = {\r\n                        type:\"progress\",\r\n                        value: appointment.completion,\r\n                        class: getBarClass(appointment.completion)\r\n                    };\r\n                    break;\r\n                case \"date\":\r\n                    content = {\r\n                        value: getDate(appointment.date)\r\n                    }\r\n                    break;\r\n                case \"time\":\r\n                    content = {\r\n                        value: getTime(appointment.date)\r\n                    }\r\n                    break;\r\n                case \"buttons\":\r\n                    had_button_case = true;\r\n                    content = {\r\n                        type: \"button-group\",\r\n                        value: []\r\n                    }\r\n                    const buttonData = getActionButton(appointment);\r\n                    let i=0;\r\n                    buttonData.map(button => {\r\n                        content.value.push({title: button.title, callback: buttons[i].callback, class: button.class});\r\n                        i++;\r\n                    })\r\n            }\r\n            object.contents.push(content);\r\n        });\r\n        if(buttons && !had_button_case) {\r\n            const buttonContent = {type:\"buttons\",actions: []};\r\n            buttons.map(button => {\r\n                buttonContent.actions.push({title: button.title, callback: button.callback, class: button.class});\r\n            })\r\n            object.contents.push(buttonContent);\r\n        }\r\n        table_data.push(object);\r\n    })\r\n\r\n    return table_data;\r\n}\r\n\r\nconst getStatus = (status) => {\r\n    const result = {\r\n        status: '',\r\n        class: ''\r\n    }\r\n    switch (status){\r\n        case 0:\r\n            result.status = 'Waiting';\r\n            result.class = 'bg-info';\r\n            break;\r\n        case 1:\r\n            result.status = 'Accepted';\r\n            result.class = 'bg-success';\r\n            break;\r\n        case 2:\r\n            result.status = 'Cancelled';\r\n            result.class = 'bg-danger';\r\n            break;\r\n        case 3:\r\n            result.status = 'Done';\r\n            result.class = 'bg-success';\r\n            break;\r\n        default:\r\n            result.status = 'Unknown';\r\n            result.class = 'bg-blue';\r\n            break;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst getBarClass = (value) => {\r\n    if(value<50)\r\n        return \"bg-gradient-danger\"\r\n    if(value<70)\r\n        return \"bg-gradient-warning\"\r\n    if(value<90)\r\n        return \"bg-gradient-info\"\r\n    return \"bg-gradient-success\"\r\n}\r\n\r\nconst getDate = (date) => {\r\n    const d = new Date(date);\r\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n    return `${mo} ${da}, ${ye}`;\r\n}\r\n\r\nconst getActionButton = (appointment) => {\r\n    const result = [\r\n        {\r\n            title: '',\r\n            class: '',\r\n        },\r\n        {\r\n            title: '',\r\n            class: '',\r\n        }\r\n    ]\r\n\r\n    switch (appointment.status){\r\n        case 0:\r\n            result[0].title = 'Accept';\r\n            result[1].title = 'Deny';\r\n            result[0].class = 'bg-gradient-success border-0';\r\n            result[1].class = 'bg-gradient-danger border-0';\r\n            break;\r\n        case 1:\r\n            result[0].title = 'Email';\r\n            result[1].title = 'Cancel';\r\n            result[0].class = 'bg-gradient-info border-0';\r\n            result[1].class = 'bg-gradient-danger border-0';\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        default:\r\n            result[0].title = 'Email';\r\n            result[0].class = 'bg-gradient-info border-0';\r\n            result[1].class = 'd-none';\r\n            break;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst getTime = (date) => new Intl.DateTimeFormat('en', { timeStyle: 'short' }).format(new Date(date));\r\n","D:\\.Projects\\matin-insurance\\client\\src\\actions\\videoActions.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\FormModal.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\Header.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\actions\\appointmentActions.js",["445","446","447"],"import server from \"../api/server\";\r\nimport {appointments_route} from \"../utils/serverRoutes\";\r\nimport {\r\n    UPDATE_APPOINTMENT,\r\n    UPDATE_APPOINTMENT_FAIL,\r\n    GET_APPOINTMENTS,\r\n    GET_APPOINTMENTS_FAIL,\r\n    CREATE_APPOINTMENT, CREATE_APPOINTMENT_FAIL\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getAppointments = () => async dispatch => {\r\n    try{\r\n        const {data} = await server.get(appointments_route, {\r\n            headers: {\r\n                'Authorization': axios.defaults.headers.common['Authorization']\r\n            }\r\n        });\r\n        dispatch({type: GET_APPOINTMENTS, appointments: data});\r\n    }catch(e){\r\n        if(!e.response)\r\n            return dispatch({type: GET_APPOINTMENTS_FAIL, error: 'Server error'});\r\n\r\n        dispatch({type: GET_APPOINTMENTS_FAIL, error: e.response.data});\r\n    }\r\n}\r\n\r\nexport const updateAppointment = (appointment) => async dispatch => {\r\n    try{\r\n        const {data} = await server.put(appointments_route, appointment,{\r\n            headers: {\r\n                'Authorization': axios.defaults.headers.common['Authorization']\r\n            }\r\n        });\r\n        dispatch({type: UPDATE_APPOINTMENT, appointment: data});\r\n    }catch(e){\r\n        if(!e.response)\r\n            return dispatch({type: UPDATE_APPOINTMENT_FAIL, error: 'Server error'});\r\n\r\n        dispatch({type: UPDATE_APPOINTMENT_FAIL, error: e.response.data});\r\n    }\r\n}\r\n\r\nexport const newAppointment = (appointment_data, user_id) => async dispatch => {\r\n    try{\r\n        const req = {\r\n            client_id: user_id,\r\n            client_name: appointment_data.first_name.replace(/\\s+/g,'') + \" \" + appointment_data.last_name.replace(/\\s+/g,''),\r\n            client_email: appointment_data.email,\r\n            type: appointment_data.type,\r\n            phone : appointment_data.phone,\r\n            date: appointment_data.selectedDate,\r\n        };\r\n        const {data} = await server.post(appointments_route, req,{\r\n            headers: {\r\n                'Authorization': axios.defaults.headers.common['Authorization']\r\n            }\r\n        });\r\n        document.dispatchEvent(new CustomEvent('book_appointment', { detail : {success: true} }));\r\n    }catch(e){\r\n        document.dispatchEvent(new CustomEvent('book_appointment', { detail : {success: false} }));\r\n    }\r\n}\r\n\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\actions\\commentActions.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\UserAddCommentModal.js",["448","449"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Form,\r\n    FormGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    InputGroup} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass UserAddCommentModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            content : {\r\n                new_comment : ''\r\n            },\r\n            error: '',\r\n            isLoading: false\r\n        }\r\n    this.onChange = this.onChange.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ content: { ...this.state.content, [e.target.name]: e.target.value} });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const {error: state_error, changed} = this.state;\r\n        const error = (this.props.error) ? this.props.error : state_error;\r\n\r\n        return (\r\n            <Card className={`shadow`}>\r\n                <Form className=\"m-5\" onSubmit={this.onSubmitSmtg}>\r\n                    <h1 className=\"ml--3 mb-3\">Add a comment</h1>\r\n              <FormGroup className=\"mb-0\">\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"fas fa-comment\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"Add a public comment...\" type=\"text\" name=\"new_comment\"  onChange={this.onChange}/>\r\n                </InputGroup>\r\n              </FormGroup>\r\n                 \r\n              <div className=\" mt-3\">\r\n                  <Button color=\"primary\" type=\"submit\" >\r\n                        Publish\r\n                  </Button>\r\n                </div>\r\n              \r\n            </Form>\r\n        \r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.change_pass_error,\r\n        message: state.auth.change_pass_message\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserAddCommentModal);\r\n\r\n",["450","451"],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\UserHeader.js",["452"],"\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"header pb-3 pt-5 pt-lg-8 d-flex align-items-center\"\r\n          style={{\r\n            minHeight: \"400px\",\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/theme/profile-cover.jpg\").default + \")\",\r\n            backgroundSize: \"1000px 600px\",\r\n            backgroundPosition: \"center top\"\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className=\"mask bg-gradient-default opacity-8\" />\r\n          {/* Header container */}\r\n          <Container className=\"d-flex align-items-center\" fluid>\r\n            <Row>\r\n              <Col lg=\"7\" md=\"10\">\r\n                <h1 className=\"display-2 text-white\">Hello Matin!</h1>\r\n                <p className=\"text-white mt-0 mb-5\">\r\n                  This is your settings page. You can modify information about your account!\r\n                </p>\r\n            \r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserHeader;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\getVideoDetails.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\reducers\\stats.js",["453"],"import {GET_STATS, GET_STATS_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n    stats: [],\r\n    stat_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_STATS:\r\n            return {\r\n                ...state,\r\n                stats: action.stats,\r\n                stat_error: ''\r\n            };\r\n        case GET_STATS_FAIL:\r\n            return {\r\n                ...state,\r\n                stat_error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\auth.js",["454"],"import {\r\n    SIGN_IN,\r\n    SIGN_IN_ERROR,\r\n    SIGN_UP,\r\n    SIGN_UP_ERROR,\r\n    SIGN_OUT,\r\n    UPDATE_TOKEN,\r\n    CHANGE_PASS,\r\n    CHANGE_PASS_ERROR, CHANGE_EMAIL, CHANGE_EMAIL_ERROR, CHANGE_AVATAR_ERROR, CHANGE_AVATAR\r\n} from '../actions/types';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nconst initialState = {\r\n    logged_in: false,\r\n    sign_in_error:'',\r\n    sign_up_error:'',\r\n    change_pass_message: '',\r\n    change_pass_error: '',\r\n    change_email_error: '',\r\n    change_avatar_error: '',\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                logged_in: !isEmpty(action.user),\r\n                user: action.user,\r\n                sign_in_error: ''\r\n            };\r\n        case SIGN_IN_ERROR:\r\n            return {\r\n                ...state,\r\n                sign_in_error: action.error\r\n            };\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                logged_in: !isEmpty(action.user),\r\n                user: action.user,\r\n                sign_up_error: ''\r\n            };  \r\n        case SIGN_UP_ERROR:\r\n            return {\r\n                ...state,\r\n                sign_up_error: action.error\r\n            };\r\n        case SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                logged_in: false,\r\n                sign_in_error: '',\r\n                user: {}\r\n            }\r\n        case UPDATE_TOKEN:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case CHANGE_PASS:\r\n            return {\r\n                ...state,\r\n                change_pass_message: 'changed'\r\n            };\r\n        case CHANGE_PASS_ERROR:\r\n            return {\r\n                ...state,\r\n                change_pass_error: action.error\r\n            };\r\n        case CHANGE_EMAIL:\r\n            return {\r\n                ...state,\r\n                user: {...state.user, email: action.email}\r\n            };\r\n        case CHANGE_EMAIL_ERROR:\r\n            return {\r\n                ...state,\r\n                change_email_error: action.error\r\n            };\r\n        case CHANGE_AVATAR:\r\n            return {\r\n                ...state,\r\n                user: {...state.user, profile_img: action.image}\r\n            };\r\n        case CHANGE_AVATAR_ERROR:\r\n            return {\r\n                ...state,\r\n                change_avatar_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\appointments.js",["455"],"import {\r\n    UPDATE_APPOINTMENT,\r\n    UPDATE_APPOINTMENT_FAIL,\r\n    GET_APPOINTMENTS,\r\n    GET_APPOINTMENTS_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    appointments: [],\r\n    appointments_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                appointments: action.appointments,\r\n                appointments_error: ''\r\n            };\r\n        case UPDATE_APPOINTMENT:\r\n            return {\r\n                ...state,\r\n                appointments: state.appointments.map((item) => {\r\n                    if (item.id !== action.appointment.id) {\r\n                        return item\r\n                    }\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...action.appointment\r\n                    }\r\n                }),\r\n                appointments_error: ''\r\n            };\r\n        case GET_APPOINTMENTS_FAIL:\r\n        case UPDATE_APPOINTMENT_FAIL:\r\n            return {\r\n                ...state,\r\n                appointments_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\reducers\\comments.js",["456"],"import {\r\n    ADD_COMMENT, ADD_COMMENT_FAIL,\r\n    DELETE_COMMENT,\r\n    DELETE_COMMENT_FAIL,\r\n    GET_COMMENTS,\r\n    GET_COMMENTS_FAIL, GET_VIDEO_COMMENTS, GET_VIDEO_COMMENTS_FAIL,\r\n    UPDATE_COMMENT, UPDATE_COMMENT_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    comments_error:''\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case GET_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: action.comments,\r\n                comments_error: ''\r\n            };\r\n        case UPDATE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: state.comments.map((item) => {\r\n                    if (item.id !== action.comment.id) {\r\n                        return item\r\n                    }\r\n\r\n                    return {\r\n                        ...item,\r\n                        ...action.comment\r\n                    }\r\n                }),\r\n                comments_error: ''\r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments:[...state.comments, action.comment],\r\n                comments_error: ''\r\n            };\r\n        case GET_VIDEO_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: action.comments,\r\n                comments_error: ''\r\n            };\r\n        case DELETE_COMMENT:\r\n            return {\r\n                ...state,\r\n                comments: state.comments.filter(item => item.id !== action.comment.id),\r\n                comments_error: ''\r\n            };\r\n        case ADD_COMMENT_FAIL:\r\n        case GET_VIDEO_COMMENTS_FAIL:\r\n        case UPDATE_COMMENT_FAIL:\r\n        case DELETE_COMMENT_FAIL:\r\n        case GET_COMMENTS_FAIL:\r\n            return {\r\n                ...state,\r\n                comments_error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\countdown.js",["457"],"export default (endDate, inversed = false) => {\r\n    let diff;\r\n    if(!inversed)\r\n        diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n    else\r\n        diff = (Date.parse(new Date()) - Date.parse(new Date(endDate)) ) / 1000;\r\n\r\n    //   countdown when date is reached\r\n    if (diff <= 0) return false;\r\n\r\n    const timeLeft = {\r\n        years: 0,\r\n        months: 0,\r\n        weeks:0,\r\n        days: 0,\r\n        hours: 0,\r\n        min: 0,\r\n        sec: 0,\r\n        millisec: 0,\r\n    };\r\n\r\n    // calculate time difference between now and expected date\r\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n        timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n        if(timeLeft.years === 1 && inversed)\r\n            return \" last year {none}\"\r\n        const word = (timeLeft.years === 1) ? \" year\" : \" years\";\r\n        return timeLeft.years + word;\r\n    }\r\n    if(diff >= 2419200) {\r\n        timeLeft.months = Math.floor(diff / 2419200);\r\n        if(timeLeft.months === 1 && inversed)\r\n            return \" last month {none}\"\r\n        const word = (timeLeft.months === 1) ? \" month\" : \" months\";\r\n        return timeLeft.months + word;\r\n    }\r\n    if (diff >= 604800) {\r\n        timeLeft.weeks = Math.floor(diff / 604800);\r\n        if(timeLeft.weeks === 1 && inversed)\r\n            return \" last week{none}\"\r\n        const word = (timeLeft.weeks === 1) ? \" week\" : \" weeks\";\r\n        return timeLeft.weeks + word;\r\n    }\r\n    if (diff >= 86400) { // 24 * 60 * 60\r\n        timeLeft.days = Math.floor(diff / 86400);\r\n        if(timeLeft.days === 1 && inversed)\r\n            return \" yesterday {none}\"\r\n        const word = (timeLeft.days === 1) ? \" day\" : \" days\";\r\n        return timeLeft.days + word;\r\n    }\r\n    if(inversed)\r\n        return \" earlier today{none}\"\r\n    return \"0 days\";\r\n\r\n\r\n}","D:\\.Projects\\matin-insurance\\client\\src\\utils\\charts.js",["458"],"\r\nconst Chart = require(\"chart.js\");\r\n//\r\n// Chart extension for making the bars rounded\r\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\r\n//\r\n\r\nChart.elements.Rectangle.prototype.draw = function() {\r\n  var ctx = this._chart.ctx;\r\n  var vm = this._view;\r\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\r\n  var borderWidth = vm.borderWidth;\r\n  // Set Radius Here\r\n  // If radius is large enough to cause drawing errors a max radius is imposed\r\n  var cornerRadius = 6;\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || \"bottom\";\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || \"left\";\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    var halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\r\n    var borderRight =\r\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\r\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\r\n    var borderBottom =\r\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\r\n  var startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  var corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (var i = 1; i < 4; i++) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    // let nextCorner = cornerAt(nextCornerId);\r\n\r\n    let width = corners[2][0] - corners[1][0];\r\n    let height = corners[0][1] - corners[1][1];\r\n    let x = corners[1][0];\r\n    let y = corners[1][1];\r\n    // eslint-disable-next-line\r\n    var radius: any = cornerRadius;\r\n\r\n    // Fix radius being too large\r\n    if (radius > height / 2) {\r\n      radius = height / 2;\r\n    }\r\n    if (radius > width / 2) {\r\n      radius = width / 2;\r\n    }\r\n\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n};\r\n\r\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\r\nvar fonts = {\r\n  base: \"Open Sans\"\r\n};\r\n\r\n// Colors\r\nvar colors = {\r\n  gray: {\r\n    100: \"#f6f9fc\",\r\n    200: \"#e9ecef\",\r\n    300: \"#dee2e6\",\r\n    400: \"#ced4da\",\r\n    500: \"#adb5bd\",\r\n    600: \"#8898aa\",\r\n    700: \"#525f7f\",\r\n    800: \"#32325d\",\r\n    900: \"#212529\"\r\n  },\r\n  theme: {\r\n    default: \"#172b4d\",\r\n    primary: \"#2dce89\",\r\n    secondary: \"#f4f5f7\",\r\n    info: \"#11cdef\",\r\n    success: \"#2dce89\",\r\n    danger: \"#f5365c\",\r\n    warning: \"#fb6340\"\r\n  },\r\n  black: \"#12263F\",\r\n  white: \"#FFFFFF\",\r\n  transparent: \"transparent\"\r\n};\r\n\r\n// Methods\r\n\r\n// Chart.js global options\r\nfunction chartOptions() {\r\n  // Options\r\n  var options = {\r\n    defaults: {\r\n      global: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontFamily: fonts.base,\r\n        defaultFontSize: 13,\r\n        layout: {\r\n          padding: 0\r\n        },\r\n        legend: {\r\n          display: false,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 16\r\n          }\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            backgroundColor: colors.theme[\"primary\"]\r\n          },\r\n          line: {\r\n            tension: 0.4,\r\n            borderWidth: 4,\r\n            borderColor: colors.theme[\"primary\"],\r\n            backgroundColor: colors.transparent,\r\n            borderCapStyle: \"rounded\"\r\n          },\r\n          rectangle: {\r\n            backgroundColor: colors.theme[\"primary\"]\r\n          },\r\n          arc: {\r\n            backgroundColor: colors.theme[\"primary\"],\r\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\r\n            borderWidth: 4\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          mode: \"index\",\r\n          intersect: false\r\n        }\r\n      },\r\n      doughnut: {\r\n        cutoutPercentage: 83,\r\n        legendCallback: function(chart) {\r\n          var data = chart.data;\r\n          var content = \"\";\r\n\r\n          data.labels.forEach(function(label, index) {\r\n            var bgColor = data.datasets[0].backgroundColor[index];\r\n\r\n            content += '<span class=\"chart-legend-item\">';\r\n            content +=\r\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\r\n              bgColor +\r\n              '\"></i>';\r\n            content += label;\r\n            content += \"</span>\";\r\n          });\r\n\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // yAxes\r\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\r\n    gridLines: {\r\n      borderDash: [2],\r\n      borderDashOffset: [2],\r\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      drawBorder: false,\r\n      drawTicks: false,\r\n      lineWidth: 0,\r\n      zeroLineWidth: 0,\r\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      zeroLineBorderDash: [2],\r\n      zeroLineBorderDashOffset: [2]\r\n    },\r\n    ticks: {\r\n      beginAtZero: true,\r\n      padding: 10,\r\n      callback: function(value) {\r\n        if (!(value % 10)) {\r\n          return value;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // xAxes\r\n  Chart.scaleService.updateScaleDefaults(\"category\", {\r\n    gridLines: {\r\n      drawBorder: false,\r\n      drawOnChartArea: false,\r\n      drawTicks: false\r\n    },\r\n    ticks: {\r\n      padding: 20\r\n    }\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\n// Parse global options\r\nfunction parseOptions(parent, options) {\r\n  for (var item in options) {\r\n    if (typeof options[item] !== \"object\") {\r\n      parent[item] = options[item];\r\n    } else {\r\n      parseOptions(parent[item], options[item]);\r\n    }\r\n  }\r\n}\r\n\r\nthis.appointments = [];\r\n\r\nlet setAppointments = (appointments) => {\r\n  this.appointments = appointments;\r\n}\r\n\r\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\r\nlet chartExample1 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[900],\r\n            zeroLineColor: colors.gray[900]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              if (!(value % 10)) {\r\n                return \"$\" + value + \"k\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          content += \"$\" + yLabel + \"k\";\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data1: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  data2: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n\r\nconst getLabels = (j = 5) => {\r\n  const d = new Date();\r\n  d.setDate(1);\r\n  d.setMonth(d.getMonth()-j+2);\r\n  let months = [];\r\n  for (let i=j; i>0; i--){\r\n    months.push(new Intl.DateTimeFormat('en', { month: 'short' }).format(d));\r\n    d.setMonth(d.getMonth()+1);\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nconst getData = (appointments, j=5) => {\r\n  const today = new Date();\r\n  today.setDate(1);\r\n  today.setMonth(today.getMonth()-j+2);\r\n  let data = [];\r\n  for (let i=j; i>0; i--){\r\n    let value = 0;\r\n    appointments.map(appointment => {\r\n      const date = new Date(appointment.date);\r\n      if(date.getMonth() === today.getMonth() && appointment.status !== 2)\r\n        value++;\r\n    });\r\n    today.setMonth(today.getMonth()+1);\r\n    data.push(value);\r\n  }\r\n  return data\r\n}\r\n\r\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\r\nlet appointmentChart = () => {\r\n  return {\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              callback: function (value) {\r\n                if (!(value % 10)) {\r\n                  //return '$' + value + 'k'\r\n                  return value;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (item, data) {\r\n            var label = data.datasets[item.datasetIndex].label || \"\";\r\n            var yLabel = item.yLabel;\r\n            var content = \"\";\r\n            if (data.datasets.length > 1) {\r\n              content += label;\r\n            }\r\n            content += yLabel;\r\n            return content;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    data: {\r\n      labels: getLabels(),\r\n      datasets: [\r\n        {\r\n          label: \"Appointments\",\r\n          data: getData(this.appointments),\r\n          maxBarThickness: 10\r\n        }\r\n      ]\r\n    }\r\n  };\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  chartOptions, // used inside src/views/Index.js\r\n  parseOptions, // used inside src/views/Index.js\r\n  setAppointments,\r\n  chartExample1, // used inside src/views/Index.js\r\n  appointmentChart, // used inside src/views/Index.js\r\n};\r\n","D:\\.Projects\\matin-insurance\\client\\src\\components\\Groups\\AvatarGroup.js",["459"],"import React from 'react';\r\nimport {UncontrolledTooltip} from \"reactstrap\";\r\nimport server from \"../../api/server\";\r\n//import {tasks_route} from \"../../utils/serverRoutes\";\r\nimport axios from \"axios\";\r\nimport filepath from \"../../filepath\";\r\n\r\nclass AvatarGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTaskUsers(this.props.task_id);\r\n    }\r\n\r\n    getTaskUsers = async (task) => {\r\n        try{\r\n            const {data} = await server.get(/*tasks_route + */\"/users/\" + task, {\r\n                headers: {\r\n                    'x-auth-token': axios.defaults.headers.common['x-auth-token']\r\n                }\r\n            });\r\n            this.setState({users: data});\r\n        }catch(e){\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getUsers(users, number = users.length){\r\n        if(number > 5)\r\n            number = 5;\r\n        return users.map((user, key) => {\r\n            if(number > 0) {\r\n                number--;\r\n                return (\r\n                    <React.Fragment key={key}>\r\n                        <a\r\n                            className=\"avatar avatar-sm\"\r\n                            id={\"user_\" +user._id}\r\n                            onClick={e => e.preventDefault()}\r\n                        >\r\n                            <img\r\n                                alt=\"...\"\r\n                                className=\"rounded-circle\"\r\n                                src={filepath + `/profile-pics/${user.profile_img}`}\r\n                            />\r\n                        </a>\r\n                        <UncontrolledTooltip\r\n                            delay={0}\r\n                            target={\"user_\" +user._id}\r\n                        >\r\n                            {user.name}\r\n                        </UncontrolledTooltip>\r\n                    </React.Fragment>\r\n                );\r\n            }else{\r\n                return null;\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"avatar-group\">\r\n                {this.getUsers(this.state.users)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvatarGroup;","D:\\.Projects\\matin-insurance\\client\\src\\utils\\nFormat.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Cards\\StatCard.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\actions\\statActions.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Headers\\MainHeader.js",["460"],"\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row } from \"reactstrap\";\r\n\r\nclass MainHeader extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header pt-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n              {/* Card stats */}\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default MainHeader;\r\n","D:\\.Projects\\matin-insurance\\client\\src\\layouts\\User.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\UserProfilePage.js",["461"],"D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\ChangeUserInfoModal.js",["462","463","464"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Form,\r\n    Col,\r\n    Row,\r\n    FormGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    InputGroup} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ChangeUserInfoModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            content : {\r\n                fname : (this.props.user.name)?this.props.user.name.split(\" \")[0]: \"\",\r\n                lname : (this.props.user.name && this.props.user.name.split(\" \")[1])?this.props.user.name.split(\" \")[1]: \"\"\r\n            },\r\n           \r\n            error: '',\r\n            changed:false,\r\n            isLoading: false,\r\n        }\r\n    this.onChange = this.onChange.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ content: { ...this.state.content, [e.target.name]: e.target.value} });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('change_name', e => {\r\n            if(e.detail.success){\r\n                this.props.closeModal(undefined, true);\r\n                window.location.reload(false)\r\n\r\n            }else{\r\n                this.props.closeModal(undefined, false, true);\r\n            }\r\n        }, false);\r\n    }\r\n\r\n\r\n    onSubmitContactInfo = (e) =>{\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state.content);\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        const {error: state_error, changed} = this.state;\r\n        const error = (this.props.error) ? this.props.error : state_error;\r\n\r\n        return (\r\n            <Card className={`shadow`}>\r\n                <Form className=\"m-5\" onSubmit={this.onSubmitContactInfo}>\r\n                    <h1 className=\"ml--3 mb-3\" >Change Personal Information</h1>\r\n\r\n                <Col xs=\"12\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-signature\" />\r\n\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New First Name\" type=\"text\" name=\"fname\" value={this.state.content.fname} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>\r\n                <Col xs=\"12\">\r\n                <InputGroup className=\"input-group-alternative mt-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className= \"fas fa-signature\"/>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"New Last Name\" type=\"text\" name=\"lname\" value={this.state.content.lname} onChange={this.onChange}/>\r\n                </InputGroup>\r\n                </Col>   \r\n                    {error && <p style={{color: 'red', fontSize: 12}}>{error}</p>}\r\n              <div className=\" mt-3\">\r\n                  <Button color=\"primary\"\r\n                   type=\"submit\" \r\n                   className=\"center\"\r\n                   >\r\n                        Change\r\n                  </Button>\r\n                </div>\r\n              \r\n            </Form>\r\n        \r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.change_pass_error,\r\n        message: state.auth.change_pass_message,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChangeUserInfoModal);\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\components\\Modals\\UploadPicModal.js",["465"],"import React, {useEffect, useMemo, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {Button, Card} from \"reactstrap\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\nconst thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n    display: 'block',\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n};\r\n\r\n\r\n\r\nfunction UploadPicModal(props) {\r\n    const [files, setFiles] = useState([]);\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    });\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                <img\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    useEffect(() => () => {\r\n        files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n\r\n    return (\r\n        <Card className={`shadow p-4`}>\r\n            <div className=\"container\">\r\n                <h1 className=\"ml--3 mb-3\">Upload Picture</h1>\r\n                <div {...getRootProps({style})}>\r\n                    <input {...getInputProps()} />\r\n                    <p>Drag and drop some files here, or click to select files</p>\r\n                </div>\r\n                <aside style={thumbsContainer}>\r\n                    {thumbs}\r\n                </aside>\r\n            </div>\r\n            <div className=\"align-self-center mt-3\">\r\n                <Button color=\"primary\" onClick={() => {props.onSubmit(files);props.closeModal()}}>\r\n                    Change\r\n                </Button>\r\n                <Button color=\"danger\" onClick={props.closeModal}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default UploadPicModal;\r\n\r\n","D:\\.Projects\\matin-insurance\\client\\src\\filepath.js",[],"D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\Forgot.js",["466","467","468","469","470","471"],"import React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Card, CardBody, CardHeader, CardFooter,\r\n    Col, Container, Row, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Button, Form\r\n} from \"reactstrap\";\r\nimport MainHeader from \"components/Headers/MainHeader.js\";\r\nimport {connect} from 'react-redux';\r\nimport _ from \"lodash\";\r\nimport history from \"../../history\";\r\nimport {requestPass} from \"../../actions/userActions\";\r\n\r\n\r\nclass Forgot extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            error: '',\r\n            loading: false,\r\n        }\r\n        this.submit = this.submit.bind(this);\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if(prevState.email !== this.state.email){\r\n            this.setState({changed:true});\r\n          }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        document.addEventListener('request_pass', e=> {\r\n\r\n\r\n            if(e.detail.success){\r\n             \r\n                this.sendDisplayValid();\r\n\r\n            }else{\r\n              this.sendDisplayError();\r\n                console.log(\"INVALID\");\r\n            }\r\n        }, false);\r\n    }\r\n\r\n   \r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    submit(e){\r\n        e.preventDefault();\r\n        this.props.requestPass(this.state.email);\r\n      }\r\n\r\n    sendDisplayValid(){     \r\n      document.getElementById('send-email').style.display = \"none\";\r\n      document.getElementById(\"resend-email\").style.display=\"inline-block\";\r\n      document.getElementById(\"email-sent-message\").style.display=\"inline-block\";\r\n  \r\n    }\r\n    sendDisplayError(){\r\n      document.getElementById('send-email').style.display = \"none\";\r\n      document.getElementById(\"resend-email\").style.display=\"inline-block\";\r\n      document.getElementById(\"email-sent-message-error\").style.display=\"inline-block\";\r\n  \r\n    }\r\n\r\n    renterEmail(){\r\n    }\r\n\r\n    showSnackBar(message){\r\n        const x = document.getElementById(\"snackbar\");\r\n        x.className = \"show\";\r\n\r\n        setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n        this.setState({snackbar_message: message})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col lg=\"5\" md=\"7\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              <div className=\"text-center text-muted mb-4\">\r\n                <small>Enter the e-mail address linked to your account</small>\r\n              </div>\r\n              <Form role=\"form\" onSubmit={this.submit}>\r\n                <FormGroup className=\"mb-3\">\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-email-83\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Email\" name=\"email\" type=\"email\"  onChange={this.onChange} required/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              \r\n                <div className=\"text-center\">\r\n                  <Button color=\"primary\" type=\"submit\" id=\"send-email\">\r\n                    Send code\r\n                  </Button>\r\n                  <p id=\"email-sent-message\" style={{display : 'none', color : 'green'}}><em>An email has been sent</em></p>\r\n                  <p id=\"email-sent-message-error\" style={{display : 'none', color : 'red'}}><em>No account is linked to this address</em></p>\r\n                  <Row>\r\n                  <Button \r\n                    className=\"bg-info center mt-2\"\r\n                     style={{width: '40%', height: '40%', display : 'none'}}\r\n                     id=\"resend-email\"\r\n                     onClick={() => window.location.reload(false)}>\r\n                    Re-enter e-mail\r\n                  </Button>\r\n                  </Row>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n                \r\n                <div id=\"snackbar\">{this.state.snackbar_message}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, {requestPass})(Forgot);\r\n","D:\\.Projects\\matin-insurance\\client\\src\\views\\examples\\NewPassword.js",["472","473","474","475","476","477"],"import React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Card, CardBody, CardHeader, CardFooter,\r\n    Col, Container, Row, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input, Button, Form\r\n} from \"reactstrap\";\r\nimport MainHeader from \"components/Headers/MainHeader.js\";\r\nimport {connect} from 'react-redux';\r\nimport _ from \"lodash\";\r\nimport history from \"../../history\";\r\nimport {changePassByToken, checkPassId} from \"../../actions/userActions\";\r\n\r\n\r\nclass Forgot extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password:\"\",\r\n            password_confirm: \"\",\r\n            error: '',\r\n            isLoading: false\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.checkPassId(this.props.match.params.id);\r\n        document.addEventListener('check_pass_id', e=> {\r\n            if(e.detail.success){\r\n                console.log(\"VALIDD\");\r\n            }else{\r\n              history.push(\"/auth/forgot\")\r\n              console.log(\"no work\");\r\n            }\r\n        }, false);\r\n        document.addEventListener('change_pass_forgot', e=> {\r\n            if(e.detail.success){\r\n                console.log(\"UPDATED\");\r\n            }else{\r\n                console.log(\"NOT UPDATED\");\r\n            }\r\n        }, false);\r\n    }\r\n\r\n   \r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    submit(e){\r\n        e.preventDefault();\r\n        this.props.changePassByToken(this.props.match.params.id, this.state.password);\r\n    }\r\n\r\n   \r\n\r\n    showSnackBar(message){\r\n        const x = document.getElementById(\"snackbar\");\r\n        x.className = \"show\";\r\n\r\n        setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\r\n        this.setState({snackbar_message: message})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Col lg=\"5\" md=\"7\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              <div className=\"text-center text-muted mb-4\">\r\n                <small>Choose a new password </small>\r\n              </div>\r\n              <Form role=\"form\" onSubmit={this.submit}>\r\n                <FormGroup className=\"mb-3\">\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"fas fa-unlock\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"New password\" name=\"password\" type=\"password\" value={this.state.password}  onChange={this.onChange}/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-3\">\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"fas fa-unlock\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input placeholder=\"Confirm new password\" name=\"password_confirm\" type=\"password\" value={this.state.password_confirm} onChange={this.onChange}/>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n\r\n                <div className=\"text-center\">\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Update Password\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n                \r\n                <div id=\"snackbar\">{this.state.snackbar_message}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, {checkPassId, changePassByToken})(Forgot);\r\n","D:\\.Projects\\matin-insurance\\client\\src\\utils\\requireAdmin.js",["478"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport history from \"../history\";\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        UNSAFE_componentWillMount() {\r\n            if (!this.props.logged_in || this.props.user.admin.toLowerCase() === 'false') {\r\n                history.push('/auth/login');\r\n            }\r\n        }\r\n\r\n        UNSAFE_componentWillUpdate = nextProps => {\r\n            if (!nextProps.logged_in || nextProps.user.admin.toLowerCase() === 'false') {\r\n                history.push('/auth/login');\r\n            }\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <ComposedComponent {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        logged_in: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            logged_in: state.auth.logged_in,\r\n            user: state.auth.user\r\n        };\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate);\r\n}\r\n","D:\\.Projects\\matin-insurance\\client\\src\\components\\Footers\\MainFooter.js",[],{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","replacedBy":"482"},{"ruleId":"483","severity":1,"message":"484","line":7,"column":1,"nodeType":"485","endLine":39,"endColumn":2},{"ruleId":"483","severity":1,"message":"484","line":6,"column":1,"nodeType":"485","endLine":45,"endColumn":2},{"ruleId":"486","severity":1,"message":"487","line":7,"column":8,"nodeType":"488","messageId":"489","endLine":7,"endColumn":15},{"ruleId":"486","severity":1,"message":"490","line":5,"column":10,"nodeType":"488","messageId":"489","endLine":5,"endColumn":19},{"ruleId":"486","severity":1,"message":"491","line":7,"column":8,"nodeType":"488","messageId":"489","endLine":7,"endColumn":19},{"ruleId":"486","severity":1,"message":"492","line":8,"column":8,"nodeType":"488","messageId":"489","endLine":8,"endColumn":19},{"ruleId":"486","severity":1,"message":"493","line":12,"column":8,"nodeType":"488","messageId":"489","endLine":12,"endColumn":18},{"ruleId":"486","severity":1,"message":"494","line":13,"column":3,"nodeType":"488","messageId":"489","endLine":13,"endColumn":7},{"ruleId":"486","severity":1,"message":"495","line":14,"column":3,"nodeType":"488","messageId":"489","endLine":14,"endColumn":12},{"ruleId":"486","severity":1,"message":"496","line":15,"column":3,"nodeType":"488","messageId":"489","endLine":15,"endColumn":18},{"ruleId":"486","severity":1,"message":"497","line":16,"column":3,"nodeType":"488","messageId":"489","endLine":16,"endColumn":17},{"ruleId":"486","severity":1,"message":"498","line":17,"column":3,"nodeType":"488","messageId":"489","endLine":17,"endColumn":8},{"ruleId":"486","severity":1,"message":"499","line":18,"column":3,"nodeType":"488","messageId":"489","endLine":18,"endColumn":13},{"ruleId":"486","severity":1,"message":"500","line":23,"column":3,"nodeType":"488","messageId":"489","endLine":23,"endColumn":6},{"ruleId":"486","severity":1,"message":"494","line":13,"column":3,"nodeType":"488","messageId":"489","endLine":13,"endColumn":7},{"ruleId":"486","severity":1,"message":"495","line":14,"column":3,"nodeType":"488","messageId":"489","endLine":14,"endColumn":12},{"ruleId":"486","severity":1,"message":"496","line":15,"column":3,"nodeType":"488","messageId":"489","endLine":15,"endColumn":18},{"ruleId":"486","severity":1,"message":"497","line":16,"column":3,"nodeType":"488","messageId":"489","endLine":16,"endColumn":17},{"ruleId":"486","severity":1,"message":"498","line":17,"column":3,"nodeType":"488","messageId":"489","endLine":17,"endColumn":8},{"ruleId":"486","severity":1,"message":"499","line":18,"column":3,"nodeType":"488","messageId":"489","endLine":18,"endColumn":13},{"ruleId":"486","severity":1,"message":"501","line":10,"column":5,"nodeType":"488","messageId":"489","endLine":10,"endColumn":16},{"ruleId":"486","severity":1,"message":"502","line":11,"column":44,"nodeType":"488","messageId":"489","endLine":11,"endColumn":56},{"ruleId":"486","severity":1,"message":"503","line":11,"column":58,"nodeType":"488","messageId":"489","endLine":11,"endColumn":71},{"ruleId":"486","severity":1,"message":"504","line":16,"column":9,"nodeType":"488","messageId":"489","endLine":16,"endColumn":20},{"ruleId":"486","severity":1,"message":"505","line":6,"column":3,"nodeType":"488","messageId":"489","endLine":6,"endColumn":7},{"ruleId":"486","severity":1,"message":"506","line":6,"column":9,"nodeType":"488","messageId":"489","endLine":6,"endColumn":17},{"ruleId":"486","severity":1,"message":"507","line":6,"column":19,"nodeType":"488","messageId":"489","endLine":6,"endColumn":29},{"ruleId":"508","severity":1,"message":"509","line":73,"column":21,"nodeType":"510","endLine":73,"endColumn":168},{"ruleId":"486","severity":1,"message":"511","line":12,"column":5,"nodeType":"488","messageId":"489","endLine":12,"endColumn":13},{"ruleId":"486","severity":1,"message":"512","line":12,"column":15,"nodeType":"488","messageId":"489","endLine":12,"endColumn":29},{"ruleId":"486","severity":1,"message":"513","line":12,"column":31,"nodeType":"488","messageId":"489","endLine":12,"endColumn":43},{"ruleId":"486","severity":1,"message":"514","line":12,"column":45,"nodeType":"488","messageId":"489","endLine":12,"endColumn":57},{"ruleId":"486","severity":1,"message":"515","line":126,"column":16,"nodeType":"488","messageId":"489","endLine":126,"endColumn":21},{"ruleId":"486","severity":1,"message":"505","line":5,"column":5,"nodeType":"488","messageId":"489","endLine":5,"endColumn":9},{"ruleId":"486","severity":1,"message":"506","line":5,"column":11,"nodeType":"488","messageId":"489","endLine":5,"endColumn":19},{"ruleId":"486","severity":1,"message":"507","line":5,"column":21,"nodeType":"488","messageId":"489","endLine":5,"endColumn":31},{"ruleId":"486","severity":1,"message":"516","line":5,"column":33,"nodeType":"488","messageId":"489","endLine":5,"endColumn":43},{"ruleId":"486","severity":1,"message":"517","line":20,"column":9,"nodeType":"488","messageId":"489","endLine":20,"endColumn":13},{"ruleId":"486","severity":1,"message":"518","line":8,"column":3,"nodeType":"488","messageId":"489","endLine":8,"endColumn":22},{"ruleId":"486","severity":1,"message":"507","line":8,"column":3,"nodeType":"488","messageId":"489","endLine":8,"endColumn":13},{"ruleId":"486","severity":1,"message":"500","line":16,"column":3,"nodeType":"488","messageId":"489","endLine":16,"endColumn":6},{"ruleId":"519","severity":1,"message":"520","line":48,"column":80,"nodeType":"521","messageId":"522","endLine":48,"endColumn":81,"suggestions":"523"},{"ruleId":"519","severity":1,"message":"524","line":48,"column":83,"nodeType":"521","messageId":"522","endLine":48,"endColumn":84,"suggestions":"525"},{"ruleId":"519","severity":1,"message":"526","line":48,"column":86,"nodeType":"521","messageId":"522","endLine":48,"endColumn":87,"suggestions":"527"},{"ruleId":"486","severity":1,"message":"528","line":6,"column":3,"nodeType":"488","messageId":"489","endLine":6,"endColumn":8},{"ruleId":"486","severity":1,"message":"505","line":7,"column":3,"nodeType":"488","messageId":"489","endLine":7,"endColumn":7},{"ruleId":"486","severity":1,"message":"507","line":8,"column":3,"nodeType":"488","messageId":"489","endLine":8,"endColumn":13},{"ruleId":"486","severity":1,"message":"516","line":9,"column":3,"nodeType":"488","messageId":"489","endLine":9,"endColumn":13},{"ruleId":"486","severity":1,"message":"513","line":10,"column":3,"nodeType":"488","messageId":"489","endLine":10,"endColumn":15},{"ruleId":"486","severity":1,"message":"514","line":11,"column":3,"nodeType":"488","messageId":"489","endLine":11,"endColumn":15},{"ruleId":"486","severity":1,"message":"529","line":12,"column":3,"nodeType":"488","messageId":"489","endLine":12,"endColumn":23},{"ruleId":"486","severity":1,"message":"512","line":13,"column":3,"nodeType":"488","messageId":"489","endLine":13,"endColumn":17},{"ruleId":"486","severity":1,"message":"530","line":14,"column":3,"nodeType":"488","messageId":"489","endLine":14,"endColumn":8},{"ruleId":"486","severity":1,"message":"531","line":15,"column":3,"nodeType":"488","messageId":"489","endLine":15,"endColumn":13},{"ruleId":"486","severity":1,"message":"532","line":16,"column":3,"nodeType":"488","messageId":"489","endLine":16,"endColumn":17},{"ruleId":"486","severity":1,"message":"533","line":17,"column":3,"nodeType":"488","messageId":"489","endLine":17,"endColumn":17},{"ruleId":"486","severity":1,"message":"534","line":18,"column":3,"nodeType":"488","messageId":"489","endLine":18,"endColumn":11},{"ruleId":"486","severity":1,"message":"535","line":19,"column":3,"nodeType":"488","messageId":"489","endLine":19,"endColumn":8},{"ruleId":"486","severity":1,"message":"518","line":22,"column":3,"nodeType":"488","messageId":"489","endLine":22,"endColumn":22},{"ruleId":"486","severity":1,"message":"528","line":7,"column":3,"nodeType":"488","messageId":"489","endLine":7,"endColumn":8},{"ruleId":"486","severity":1,"message":"505","line":8,"column":3,"nodeType":"488","messageId":"489","endLine":8,"endColumn":7},{"ruleId":"486","severity":1,"message":"507","line":9,"column":3,"nodeType":"488","messageId":"489","endLine":9,"endColumn":13},{"ruleId":"486","severity":1,"message":"516","line":10,"column":3,"nodeType":"488","messageId":"489","endLine":10,"endColumn":13},{"ruleId":"486","severity":1,"message":"513","line":11,"column":3,"nodeType":"488","messageId":"489","endLine":11,"endColumn":15},{"ruleId":"486","severity":1,"message":"514","line":12,"column":3,"nodeType":"488","messageId":"489","endLine":12,"endColumn":15},{"ruleId":"486","severity":1,"message":"529","line":13,"column":3,"nodeType":"488","messageId":"489","endLine":13,"endColumn":23},{"ruleId":"486","severity":1,"message":"512","line":14,"column":3,"nodeType":"488","messageId":"489","endLine":14,"endColumn":17},{"ruleId":"486","severity":1,"message":"530","line":15,"column":3,"nodeType":"488","messageId":"489","endLine":15,"endColumn":8},{"ruleId":"486","severity":1,"message":"531","line":16,"column":3,"nodeType":"488","messageId":"489","endLine":16,"endColumn":13},{"ruleId":"486","severity":1,"message":"532","line":17,"column":3,"nodeType":"488","messageId":"489","endLine":17,"endColumn":17},{"ruleId":"486","severity":1,"message":"533","line":18,"column":3,"nodeType":"488","messageId":"489","endLine":18,"endColumn":17},{"ruleId":"486","severity":1,"message":"534","line":19,"column":3,"nodeType":"488","messageId":"489","endLine":19,"endColumn":11},{"ruleId":"486","severity":1,"message":"535","line":20,"column":3,"nodeType":"488","messageId":"489","endLine":20,"endColumn":8},{"ruleId":"486","severity":1,"message":"518","line":23,"column":3,"nodeType":"488","messageId":"489","endLine":23,"endColumn":22},{"ruleId":"486","severity":1,"message":"490","line":13,"column":3,"nodeType":"488","messageId":"489","endLine":13,"endColumn":12},{"ruleId":"483","severity":1,"message":"536","line":18,"column":1,"nodeType":"485","endLine":80,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":19,"column":1,"nodeType":"485","endLine":46,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":2,"column":1,"nodeType":"485","endLine":2,"endColumn":54},{"ruleId":"537","severity":1,"message":"538","line":4,"column":34,"nodeType":"539","messageId":"540","endLine":4,"endColumn":36},{"ruleId":"486","severity":1,"message":"541","line":54,"column":36,"nodeType":"488","messageId":"489","endLine":54,"endColumn":43},{"ruleId":"486","severity":1,"message":"494","line":2,"column":50,"nodeType":"488","messageId":"489","endLine":2,"endColumn":54},{"ruleId":"486","severity":1,"message":"496","line":3,"column":5,"nodeType":"488","messageId":"489","endLine":3,"endColumn":20},{"ruleId":"486","severity":1,"message":"497","line":4,"column":5,"nodeType":"488","messageId":"489","endLine":4,"endColumn":19},{"ruleId":"486","severity":1,"message":"498","line":5,"column":5,"nodeType":"488","messageId":"489","endLine":5,"endColumn":10},{"ruleId":"486","severity":1,"message":"499","line":6,"column":5,"nodeType":"488","messageId":"489","endLine":6,"endColumn":15},{"ruleId":"542","severity":1,"message":"543","line":41,"column":33,"nodeType":"510","endLine":41,"endColumn":157},{"ruleId":"508","severity":1,"message":"509","line":56,"column":29,"nodeType":"510","endLine":56,"endColumn":83},{"ruleId":"483","severity":1,"message":"536","line":5,"column":1,"nodeType":"485","endLine":89,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":36,"column":28,"nodeType":"539","messageId":"540","endLine":36,"endColumn":30},{"ruleId":"544","severity":1,"message":"545","line":38,"column":13,"nodeType":"546","messageId":"547","endLine":82,"endColumn":14},{"ruleId":"483","severity":1,"message":"536","line":1,"column":1,"nodeType":"485","endLine":79,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":13,"column":34,"nodeType":"539","messageId":"540","endLine":13,"endColumn":36},{"ruleId":"537","severity":1,"message":"538","line":20,"column":28,"nodeType":"539","messageId":"540","endLine":20,"endColumn":30},{"ruleId":"544","severity":1,"message":"545","line":22,"column":13,"nodeType":"546","messageId":"547","endLine":65,"endColumn":14},{"ruleId":"537","severity":1,"message":"538","line":61,"column":43,"nodeType":"539","messageId":"540","endLine":61,"endColumn":45},{"ruleId":"537","severity":1,"message":"538","line":70,"column":32,"nodeType":"539","messageId":"540","endLine":70,"endColumn":34},{"ruleId":"486","severity":1,"message":"548","line":8,"column":5,"nodeType":"488","messageId":"489","endLine":8,"endColumn":23},{"ruleId":"486","severity":1,"message":"549","line":8,"column":25,"nodeType":"488","messageId":"489","endLine":8,"endColumn":48},{"ruleId":"486","severity":1,"message":"550","line":54,"column":16,"nodeType":"488","messageId":"489","endLine":54,"endColumn":20},{"ruleId":"486","severity":1,"message":"541","line":33,"column":36,"nodeType":"488","messageId":"489","endLine":33,"endColumn":43},{"ruleId":"486","severity":1,"message":"515","line":34,"column":15,"nodeType":"488","messageId":"489","endLine":34,"endColumn":20},{"ruleId":"479","replacedBy":"551"},{"ruleId":"481","replacedBy":"552"},{"ruleId":"486","severity":1,"message":"553","line":5,"column":10,"nodeType":"488","messageId":"489","endLine":5,"endColumn":16},{"ruleId":"483","severity":1,"message":"536","line":8,"column":1,"nodeType":"485","endLine":25,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":24,"column":1,"nodeType":"485","endLine":95,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":13,"column":1,"nodeType":"485","endLine":45,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":15,"column":1,"nodeType":"485","endLine":69,"endColumn":2},{"ruleId":"483","severity":1,"message":"536","line":1,"column":1,"nodeType":"485","endLine":56,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":375,"column":34,"nodeType":"539","messageId":"540","endLine":375,"endColumn":36},{"ruleId":"542","severity":1,"message":"543","line":42,"column":25,"nodeType":"510","endLine":46,"endColumn":26},{"ruleId":"486","severity":1,"message":"500","line":5,"column":21,"nodeType":"488","messageId":"489","endLine":5,"endColumn":24},{"ruleId":"554","severity":1,"message":"555","line":159,"column":51,"nodeType":"556","endLine":159,"endColumn":69},{"ruleId":"486","severity":1,"message":"500","line":7,"column":5,"nodeType":"488","messageId":"489","endLine":7,"endColumn":8},{"ruleId":"486","severity":1,"message":"495","line":8,"column":5,"nodeType":"488","messageId":"489","endLine":8,"endColumn":14},{"ruleId":"486","severity":1,"message":"541","line":55,"column":36,"nodeType":"488","messageId":"489","endLine":55,"endColumn":43},{"ruleId":"508","severity":1,"message":"509","line":86,"column":17,"nodeType":"510","endLine":89,"endColumn":19},{"ruleId":"486","severity":1,"message":"507","line":5,"column":21,"nodeType":"488","messageId":"489","endLine":5,"endColumn":31},{"ruleId":"486","severity":1,"message":"516","line":5,"column":33,"nodeType":"488","messageId":"489","endLine":5,"endColumn":43},{"ruleId":"486","severity":1,"message":"490","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":19},{"ruleId":"486","severity":1,"message":"557","line":8,"column":8,"nodeType":"488","messageId":"489","endLine":8,"endColumn":18},{"ruleId":"486","severity":1,"message":"558","line":10,"column":8,"nodeType":"488","messageId":"489","endLine":10,"endColumn":9},{"ruleId":"486","severity":1,"message":"559","line":11,"column":8,"nodeType":"488","messageId":"489","endLine":11,"endColumn":15},{"ruleId":"486","severity":1,"message":"507","line":5,"column":21,"nodeType":"488","messageId":"489","endLine":5,"endColumn":31},{"ruleId":"486","severity":1,"message":"516","line":5,"column":33,"nodeType":"488","messageId":"489","endLine":5,"endColumn":43},{"ruleId":"486","severity":1,"message":"490","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":19},{"ruleId":"486","severity":1,"message":"500","line":6,"column":21,"nodeType":"488","messageId":"489","endLine":6,"endColumn":24},{"ruleId":"486","severity":1,"message":"557","line":8,"column":8,"nodeType":"488","messageId":"489","endLine":8,"endColumn":18},{"ruleId":"486","severity":1,"message":"558","line":10,"column":8,"nodeType":"488","messageId":"489","endLine":10,"endColumn":9},{"ruleId":"483","severity":1,"message":"484","line":7,"column":1,"nodeType":"485","endLine":40,"endColumn":2},"no-native-reassign",["560"],"no-negated-in-lhs",["561"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'AdminNavbar' is defined but never used.","'AdminFooter' is defined but never used.","'MainNavbar' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'Row' is defined but never used.","'CHANGE_PASS' is defined but never used.","'CHANGE_EMAIL' is defined but never used.","'CHANGE_AVATAR' is defined but never used.","'UPDATE_INFO' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'error' is assigned a value but never used.","'CardFooter' is defined but never used.","'Link' is defined but never used.","'UncontrolledTooltip' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["562","563"],"Unnecessary escape character: \\^.",["564","565"],"Unnecessary escape character: \\*.",["566","567"],"'Badge' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Media' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","Assign arrow function to a variable before exporting as module default","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'changed' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CREATE_APPOINTMENT' is defined but never used.","'CREATE_APPOINTMENT_FAIL' is defined but never used.","'data' is assigned a value but never used.",["560"],["561"],"'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MainHeader' is defined but never used.","'_' is defined but never used.","'history' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"568","fix":"569","desc":"570"},{"messageId":"571","fix":"572","desc":"573"},{"messageId":"568","fix":"574","desc":"570"},{"messageId":"571","fix":"575","desc":"573"},{"messageId":"568","fix":"576","desc":"570"},{"messageId":"571","fix":"577","desc":"573"},"removeEscape",{"range":"578","text":"579"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"580","text":"581"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"582","text":"579"},{"range":"583","text":"581"},{"range":"584","text":"579"},{"range":"585","text":"581"},[999,1000],"",[999,999],"\\",[1002,1003],[1002,1002],[1005,1006],[1005,1005]]